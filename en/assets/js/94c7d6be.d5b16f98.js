"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[2959],{8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var t=i(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},8483:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"System_Config/RDK X5 Module/config_txt","title":"5.2.3 config.txt file ","description":"The RDK uses a configuration file config.txt to set some system configurations at boot time. This file is read config.txt during the boot process and supports modifying the device tree configuration, I/O pin states, ION memory, CPU frequency, and more. This file is typically accessible from Linux and must be edited as a user. If the file doesn\'t exist during the configuration process, simply create it as a new text file.uboot /boot/config.txt root config.txt","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/05_System_Config/02_RDK X5 Module/03_config_txt.md","sourceDirName":"05_System_Config/02_RDK X5 Module","slug":"/System_Config/RDK X5 Module/config_txt","permalink":"/en/System_Config/RDK X5 Module/config_txt","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"5.2.3 config.txt file ","source":"https://wiki.utmsys.org/System_Config/RDK%20X5%20Module/config_txt"},"sidebar":"tutorialSidebar","previous":{"title":"5.2.2 srpi-config tool config ","permalink":"/en/System_Config/RDK X5 Module/srpi-config"},"next":{"title":"5.2.4 Thermal & CPU Frequency Management","permalink":"/en/System_Config/RDK X5 Module/frequency_management"}}');var o=i(4848),r=i(8453);const s={title:"5.2.3 config.txt file ",source:"https://wiki.utmsys.org/System_Config/RDK%20X5%20Module/config_txt"},d=void 0,l={},c=[{value:"Notes",id:"notes",level:2},{value:"Device Tree",id:"device-tree",level:2},{value:"dtdebug",id:"dtdebug",level:3},{value:"dtoverlay",id:"dtoverlay",level:3},{value:"RDK X5 with",id:"rdk-x5-with",level:3},{value:"dtparam",id:"dtparam",level:3},{value:"X5 CPU",id:"x5-cpu",level:2},{value:"arm_boost",id:"arm_boost",level:3},{value:"governor",id:"governor",level:3},{value:"frequency",id:"frequency",level:3},{value:"IO",id:"io",level:2},{value:"gpio",id:"gpio",level:3},{value:"Example",id:"example",level:3},{value:"Temperature",id:"temperature",level:2},{value:"throttling_temp",id:"throttling_temp",level:3},{value:"shutdown_temp",id:"shutdown_temp",level:3},{value:"Option",id:"option",level:2},{value:"Voltage",id:"voltage",level:2},{value:"voltage_domain",id:"voltage_domain",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The RDK uses a configuration file ",(0,o.jsx)(n.code,{children:"config.txt"})," to set some system configurations at boot time. This file is read ",(0,o.jsx)(n.code,{children:"config.txt"})," during the boot process and supports modifying the device tree configuration, I/O pin states, ION memory, CPU frequency, and more. This file is typically accessible from Linux and must be edited as a user. If the file doesn't exist during the configuration process, simply create it as a new text file.",(0,o.jsx)(n.code,{children:"uboot"})," ",(0,o.jsx)(n.code,{children:"/boot/config.txt"})," ",(0,o.jsx)(n.code,{children:"root"})," ",(0,o.jsx)(n.code,{children:"config.txt"})]}),"\n",(0,o.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,o.jsx)(n.h2,{id:"device-tree",children:"Device Tree"}),"\n",(0,o.jsx)(n.h3,{id:"dtdebug",children:"dtdebug"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"dtdebug"})," If non-zero, ",(0,o.jsx)(n.code,{children:"uboot"})," configuration logs will be output to the serial port during the device tree configuration phase."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"dtdebug=1\n"})}),"\n",(0,o.jsx)(n.h3,{id:"dtoverlay",children:"dtoverlay"}),"\n",(0,o.jsx)(n.p,{children:"Support device tree overlay, providing a more flexible way to adjust the device tree."}),"\n",(0,o.jsxs)(n.p,{children:["\u3010RDK X3\u3011For example, by ",(0,o.jsx)(n.code,{children:"ion_resize"})," adjusting ",(0,o.jsx)(n.code,{children:"ION"})," the memory size, the following configuration will modify ",(0,o.jsx)(n.code,{children:"ION"})," the memory size to ",(0,o.jsx)(n.code,{children:"1GB"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"dtoverlay=ion_resize,size=0x40000000\n"})}),"\n",(0,o.jsx)(n.p,{children:"[RDK X5] Add /dev/spidev5.0 via dtoverlay_spi5_spidev (Note: the can device is also connected to spi5, so you can only choose one between spidev and can)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"dtoverlay=dtoverlay_spi5_spidev\n"})}),"\n",(0,o.jsx)(n.h3,{id:"rdk-x5-with",children:"RDK X5 with"}),"\n",(0,o.jsx)(n.p,{children:"Modify the boot environment variables through ion_reserved_size, ion_carveout_size, and ion_cma_size to modify the ION partition size."}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"boot environment variable name"}),(0,o.jsx)(n.th,{children:"dts tag"}),(0,o.jsx)(n.th,{children:"dts compatible string"}),(0,o.jsx)(n.th,{children:"Default size"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"ion_reserved_size"}),(0,o.jsx)(n.td,{children:"ion_reserved"}),(0,o.jsx)(n.td,{children:"ion-pool"}),(0,o.jsx)(n.td,{children:"320M"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"ion_carveout_size"}),(0,o.jsx)(n.td,{children:"ion_carveout"}),(0,o.jsx)(n.td,{children:"ion-carveout"}),(0,o.jsx)(n.td,{children:"320M"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"ion_cma_size"}),(0,o.jsx)(n.td,{children:"ion_cma"}),(0,o.jsx)(n.td,{children:"ion-cma"}),(0,o.jsx)(n.td,{children:"128M"})]})]})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"ion=ion_reserved_size=0x14000000\nion=ion_carveout_size=0x14000000\nion=ion_cma_size=0x08000000\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can view the size of each ION area through the startup information:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'root@ubuntu:~# dmesg | grep "Reserverd ion"\n[    0.207939] Reserverd ion-pool MEM start 0xa4100000, size 0x14000000\n[    0.207964] Reserverd ion-carveout MEM start 0xb8100000, size 0x14000000\n[    0.208068] Reserverd ion-cma MEM start 0xcc100000, size 0x8000000\n'})}),"\n",(0,o.jsx)(n.h3,{id:"dtparam",children:"dtparam"}),"\n",(0,o.jsx)(n.p,{children:"Supports enabling and disabling of buses such as uart, i2c, spi, and i2s."}),"\n",(0,o.jsx)(n.p,{children:"Currently supported option parameters:"}),"\n",(0,o.jsx)(n.p,{children:"RDK X3 interface: uart3, spi0, spi1, spi2, i2c0, i2c1, i2c2, i2c3, i2c4, i2c5, i2s0, i2s1"}),"\n",(0,o.jsx)(n.p,{children:"RDK X5 modules: uart1, uart2, uart3, uart6, spi1, spi2, i2c0, i2c1, i2c5, i2c4, i2c5, dw_i2s1"}),"\n",(0,o.jsx)(n.p,{children:"For example, to close serial port 3:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"dtparam=uart3=off\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For example, open ",(0,o.jsx)(n.code,{children:"i2c5"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"dtparam=i2c5=on\n"})}),"\n",(0,o.jsx)(n.h2,{id:"x5-cpu",children:"X5 CPU"}),"\n",(0,o.jsxs)(n.p,{children:["For ",(0,o.jsx)(n.code,{children:"CPU"})," details on the scheduling method, please refer to ",(0,o.jsx)(n.a,{href:"https://wiki.utmsys.org/System_Config/RDK%20X5%20Module/frequency_management#cpu%E9%A2%91%E7%8E%87%E7%AE%A1%E7%90%86-1",children:"X5 CPU Frequency Management"}),". This section only introduces the configuration method of config.txt."]}),"\n",(0,o.jsx)(n.h3,{id:"arm_boost",children:"arm_boost"}),"\n",(0,o.jsxs)(n.p,{children:["When set to 1, overclocking is enabled and the maximum frequency of RDK RDK X5 is increased to 1.8GHz. By ",(0,o.jsx)(n.code,{children:"cat /sys/devices/system/cpu/cpufreq/policy0/scaling_boost_frequencies"})," enabling boost, higher CPU frequencies will be opened."]}),"\n",(0,o.jsxs)(n.p,{children:["By default, overclocking is disabled. It can be enabled ",(0,o.jsx)(n.code,{children:"arm_boost"})," when ",(0,o.jsx)(n.code,{children:"1"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"arm_boost=1\n"})}),"\n",(0,o.jsx)(n.h3,{id:"governor",children:"governor"}),"\n",(0,o.jsxs)(n.p,{children:["The CPU frequency scheduling method has ",(0,o.jsx)(n.code,{children:"conservative ondemand userspace powersave performance schedutil "})," two options. You ",(0,o.jsx)(n.code,{children:"cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_governors"})," can get the configurable mode through."]}),"\n",(0,o.jsxs)(n.p,{children:["For example, to set it ",(0,o.jsx)(n.code,{children:"CPU"})," to run in performance mode:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"governor=performance\n"})}),"\n",(0,o.jsx)(n.h3,{id:"frequency",children:"frequency"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"governor"})," When set to ",(0,o.jsx)(n.code,{children:"userspace"}),", you can use this option to set it ",(0,o.jsx)(n.code,{children:"CPU"})," to run at a fixed frequency. Currently, ",(0,o.jsx)(n.code,{children:"300000 600000 1200000 1500000"})," these frequencies can generally be set. For details, you can use to ",(0,o.jsx)(n.code,{children:"cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies"})," obtain a list of configurable frequencies."]}),"\n",(0,o.jsxs)(n.p,{children:["For example, set ",(0,o.jsx)(n.code,{children:"CPU"})," the frequency reduction to run at ",(0,o.jsx)(n.code,{children:"1.2GHz"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"governor=userspace\nfrequency=1200000\n"})}),"\n",(0,o.jsx)(n.h2,{id:"io",children:"IO"}),"\n",(0,o.jsx)(n.h3,{id:"gpio",children:"gpio"}),"\n",(0,o.jsx)(n.p,{children:"Supports setting IO function multiplexing, output, output mode, output high, low level, pull-up and pull-down modes."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"gpio:\nip - Input                             \u8bbe\u7f6e\u4e3a\u8f93\u5165\u6a21\u5f0f\nop - Output                            \u8bbe\u7f6e\u4e3a\u8f93\u51fa\u6a21\u5f0f\nf0-f3 - Func0-Func3                    \u8bbe\u7f6e\u529f\u80fd\u590d\u7528\uff0cX3 f3\u529f\u80fd\u90fd\u662f\u8bbe\u7f6e\u4e3aio\u6a21\u5f0f\uff0cX3\u7684\u5176\u4ed6\u529f\u80fd\u548cX5\u7684\u6240\u6709\u529f\u80fd\u8bf7\u67e5\u770b40PIN \u7ba1\u811a\u5b9a\u4e49,\u6216\u67e5\u9605\u76f8\u5173\u5bc4\u5b58\u5668\u6587\u6863\ndh - Driving high (for outputs)        \u8f93\u51fa\u9ad8\u7535\u5e73\ndl - Driving low (for outputs)         \u8f93\u51fa\u4f4e\u7535\u5e73\npu - Pull up                           \u63a8\u633d\u4e0a\u62c9\npd - Pull down                         \u63a8\u633d\u4e0b\u62c9\npn/np - No pull                        \u65e0\u4e0a\u4e0b\u62c9\n"})}),"\n",(0,o.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(n.p,{children:["Configure the and ",(0,o.jsx)(n.code,{children:"40Pin"})," on the pins to IO mode:",(0,o.jsx)(n.code,{children:"GPIO5"})," ",(0,o.jsx)(n.code,{children:"GPIO6"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"gpio=5=f3\ngpio=6=f3\n# \u5bf9\u4e8e\u8fde\u7eed\u7684\u7ba1\u811a\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u914d\u7f6e\ngpio=5-6=f3\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Configure ",(0,o.jsx)(n.code,{children:"40Pin"})," the pin to ",(0,o.jsx)(n.code,{children:"GPIO5"})," input mode:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"gpio=5=f3\ngpio=5=ip\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Configure ",(0,o.jsx)(n.code,{children:"40Pin"})," the pin ",(0,o.jsx)(n.code,{children:"GPIO6"})," to output mode and output low level:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"gpio=6=f3\ngpio=6=op,dl\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Configure ",(0,o.jsx)(n.code,{children:"40Pin"})," the pin ",(0,o.jsx)(n.code,{children:"GPIO6"})," to output mode, output high level, and set pull-up:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"gpio=6=f3\ngpio=6=op,dh,pu\n"})}),"\n",(0,o.jsx)(n.h2,{id:"temperature",children:"Temperature"}),"\n",(0,o.jsx)(n.h3,{id:"throttling_temp",children:"throttling_temp"}),"\n",(0,o.jsx)(n.p,{children:"The system CPU and BPU frequency reduction temperature point. When the temperature exceeds this point, the CPU and BPU will reduce their operating frequency to reduce power consumption. The CPU will be reduced to 240MHz and the BPU will be reduced to 400MHz."}),"\n",(0,o.jsx)(n.h3,{id:"shutdown_temp",children:"shutdown_temp"}),"\n",(0,o.jsx)(n.p,{children:"System shutdown temperature point. If the temperature exceeds this point, the system will automatically shut down to protect the chip and hardware. It is recommended to properly dissipate heat to avoid device shutdown, as the device will not automatically restart after a shutdown."}),"\n",(0,o.jsx)(n.h2,{id:"option",children:"Option"}),"\n",(0,o.jsxs)(n.p,{children:["Supports using [] to set filter items. The settings of filter items need to be added at the end of the configuration file, because the part of the file without adding filter items belongs to it ",(0,o.jsx)(n.code,{children:"all"}),". Once the filter setting is added, the subsequent configuration only belongs to the filter attribute until the end of the configuration file or another filter item is set."]}),"\n",(0,o.jsx)(n.p,{children:"Currently supported filter items are differentiated by hardware model and support the following filter items:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Filter Items"}),(0,o.jsx)(n.th,{children:"Compatible models"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"[all]"}),(0,o.jsx)(n.td,{children:"All hardware, default properties"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"[rdkv1]"}),(0,o.jsx)(n.td,{children:"RDK x3 v1.0\uff0cRDK x3 v1.1"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"[rdkv1.2]"}),(0,o.jsx)(n.td,{children:"RDK x3 v1.2"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"[rdkv2]"}),(0,o.jsx)(n.td,{children:"RDK x3 v2.1"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"[rdkmd]"}),(0,o.jsx)(n.td,{children:"RDK x3 Module"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"[x5-rdk]"}),(0,o.jsx)(n.td,{children:"RDK X5 V0.1"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"voltage",children:"Voltage"}),"\n",(0,o.jsx)(n.h3,{id:"voltage_domain",children:"voltage_domain"}),"\n",(0,o.jsx)(n.p,{children:"Configure the voltage domain of the 40-pin pin, supporting configurations of 3.3V and 1.8V. If not configured, the default is 3.3V."}),"\n",(0,o.jsx)(n.p,{children:"This configuration item needs to be used in conjunction with the voltage domain switching jumper cap on the hardware."}),"\n",(0,o.jsxs)(n.p,{children:["For example, if the configuration ",(0,o.jsx)(n.code,{children:"RDK Module"})," is ",(0,o.jsx)(n.code,{children:"40Pin"})," to work in ",(0,o.jsx)(n.code,{children:"3v3"})," voltage mode, the following example uses the following ",(0,o.jsx)(n.code,{children:"[rdkmd]"})," as a filter item:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"# Voltage domain configuration for 40 Pin, 3.3V or 1.8V, defualt 3.3V\n# Only RDK Module supported\n[rdkmd]\nvoltage_domain=3.3V\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);