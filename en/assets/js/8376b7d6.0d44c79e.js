"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[8480],{8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var l=r(6540);const i={},o=l.createContext(i);function s(e){const n=l.useContext(o);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),l.createElement(o.Provider,{value:n},e.children)}},9475:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"Algorithm_Development/PLANNER/Egoplanner/EgoPlanner","title":"EgoPlanner ","description":"Source//github.com/ZJU-FAST-Lab/ego-planner-swarm/tree/ros2\\\\version","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/09_Algorithm_Development/03_PLANNER/Egoplanner/EgoPlanner.md","sourceDirName":"09_Algorithm_Development/03_PLANNER/Egoplanner","slug":"/Algorithm_Development/PLANNER/Egoplanner/","permalink":"/en/Algorithm_Development/PLANNER/Egoplanner/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"EgoPlanner ","source":"https://wiki.utmsys.org/Algorithm_Development/PLANNER/Egoplanner/"},"sidebar":"tutorialSidebar","previous":{"title":"9.3 \u8def\u5f84\u89c4\u5212","permalink":"/en/03_PLANNER"},"next":{"title":"FastPlanner ","permalink":"/en/Algorithm_Development/PLANNER/Fastplanner/"}}');var i=r(4848),o=r(8453);const s={title:"EgoPlanner ",source:"https://wiki.utmsys.org/Algorithm_Development/PLANNER/Egoplanner/"},a=void 0,t={},c=[{value:"1. Required",id:"1-required",level:2},{value:"2.",id:"2",level:2},{value:"2.1 Installing",id:"21-installing",level:3},{value:"2.2 Modify the default",id:"22-modify-the-default",level:3},{value:"2.3 Check if the modification",id:"23-check-if-the-modification",level:3},{value:"3. Code",id:"3-code",level:2},{value:"3.1 Running",id:"31-running",level:3},{value:"3.2 Running the planning",id:"32-running-the-planning",level:3},{value:"More information",id:"more-information",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Source: ",(0,i.jsx)(n.a,{href:"https://github.com/ZJU-FAST-Lab/ego-planner-swarm/tree/ros2_version",children:"https://github.com/ZJU-FAST-Lab/ego-planner-swarm/tree/ros2_version"})]}),"\n",(0,i.jsx)(n.h2,{id:"1-required",children:"1. Required"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"vtk (a dependency library for installing PCL, Qt needs to be checked when compiling)"}),"\n",(0,i.jsx)(n.li,{children:"PCL"}),"\n",(0,i.jsx)(n.li,{children:"pcl_ros"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2",children:"2."}),"\n",(0,i.jsx)(n.p,{children:"Maybe some of my publish and subscribe settings are not written correctly. Using the default FastDDS of ROS2 will cause the program to run very slowly. I haven't found the reason yet, so please change DDS to cyclonedds as follows"}),"\n",(0,i.jsx)(n.h3,{id:"21-installing",children:"2.1 Installing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"sudo apt install ros-humble-rmw-cyclonedds-cpp\n"})}),"\n",(0,i.jsx)(n.h3,{id:"22-modify-the-default",children:"2.2 Modify the default"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:'echo "export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp" >> ~/.bashrc\nsource ~/.bashrc\n'})}),"\n",(0,i.jsx)(n.h3,{id:"23-check-if-the-modification",children:"2.3 Check if the modification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:'ros2 doctor --report | grep "RMW middleware"\n'})}),"\n",(0,i.jsx)(n.p,{children:"If the output shows rmw_cyclonedds_cpp, it means the modification was successful."}),"\n",(0,i.jsx)(n.h2,{id:"3-code",children:"3. Code"}),"\n",(0,i.jsx)(n.h3,{id:"31-running",children:"3.1 Running"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"ros2 launch ego_planner rviz.launch.py\n"})}),"\n",(0,i.jsx)(n.h3,{id:"32-running-the-planning",children:"3.2 Running the planning"}),"\n",(0,i.jsx)(n.p,{children:"Open a new terminal and enter the following command"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Standalone"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"ros2 launch ego_planner single_run_in_sim.launch.py\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"swarm"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"ros2 launch ego_planner swarm.launch.py\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"large swarm"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"ros2 launch ego_planner swarm_large.launch.py\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Additional parameters to choose the map generation mode and whether to take dynamics into account","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"use_mockamap: map generation method, the default is False, False uses Random Forest, True uses mockamap"}),"\n",(0,i.jsx)(n.li,{children:"use_dynamic: Whether to consider dynamics, the default is False, False does not consider, True consider"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"ros2 launch ego_planner single_run_in_sim.launch.py use_mockamap:=True use_dynamic:=False\n"})}),"\n",(0,i.jsx)(n.h2,{id:"more-information",children:"More information"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/ZJU-FAST-Lab/ego-planner-swarm/tree/ros2_version",children:"ego-planner official"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://blog.csdn.net/weixin_44408364/article/details/136764631",children:"Configure ego-planner on the ARM architecture onboard computer"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://blog.csdn.net/qq_44998513/article/details/133791656",children:"Compiling and running ego-swarm"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);