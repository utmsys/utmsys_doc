"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[7199],{4398:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"Algorithm_Development/RL/LearningSafeFlight/NavRL","title":"NavRL","description":"Source//github.com/Zhefan-Xu/NavRL","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/09_Algorithm_Development/06_RL/LearningSafeFlight/NavRL.md","sourceDirName":"09_Algorithm_Development/06_RL/LearningSafeFlight","slug":"/Algorithm_Development/RL/LearningSafeFlight/NavRL","permalink":"/en/Algorithm_Development/RL/LearningSafeFlight/NavRL","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"source":"https://wiki.utmsys.org/Algorithm_Development/RL/NavRL/%E5%AD%A6%E4%B9%A0%E5%8A%A8%E6%80%81%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E9%A3%9E%E8%A1%8C"},"sidebar":"tutorialSidebar","previous":{"title":"DiffPhysDrone","permalink":"/en/Algorithm_Development/RL/DifferentiablePhysicsDrone/DiffPhysDrone"},"next":{"title":"9.7 \u89c6\u89c9\u8bed\u8a00\u6a21\u578b","permalink":"/en/07_VLM"}}');var a=i(4848),o=i(8453);const s={source:"https://wiki.utmsys.org/Algorithm_Development/RL/NavRL/%E5%AD%A6%E4%B9%A0%E5%8A%A8%E6%80%81%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E9%A3%9E%E8%A1%8C"},r=void 0,l={},h=[{value:"News",id:"news",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"A quick NavRL",id:"a-quick-navrl",level:2},{value:"1.",id:"1",level:2},{value:"Isaac Sim",id:"isaac-sim",level:3},{value:"NavRL Training",id:"navrl-training",level:3},{value:"Verify the installation and run the training",id:"verify-the-installation-and-run-the-training",level:3},{value:"Training Your Own RL",id:"training-your-own-rl",level:3},{value:"2. Deploy a virtual",id:"2-deploy-a-virtual",level:2},{value:"III. NavRL ROS1",id:"iii-navrl-ros1",level:2},{value:"4. NavRL ROS2",id:"4-navrl-ros2",level:2},{value:"5. Citations and",id:"5-citations-and",level:2},{value:"VI.",id:"vi",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Source: ",(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL",children:"https://github.com/Zhefan-Xu/NavRL"})]}),"\n",(0,a.jsxs)(n.p,{children:["Welcome to the NavRL repository! This repository provides an implementation of the ",(0,a.jsx)(n.a,{href:"https://ieeexplore.ieee.org/document/10904341",children:"NavRL"})," framework, which aims to enable robots to safely navigate dynamic environments using reinforcement learning. While the original paper focuses on drone navigation, NavRL can be extended to any robot with a velocity-based control system."]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL/blob/main/media/NavRL-demo1.gif",children:(0,a.jsx)(n.img,{src:"https://github.com/Zhefan-Xu/NavRL/raw/main/media/NavRL-demo1.gif",alt:""})})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL/blob/main/media/NavRL-demo2.gif",children:(0,a.jsx)(n.img,{src:"https://github.com/Zhefan-Xu/NavRL/raw/main/media/NavRL-demo2.gif",alt:""})})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL/blob/main/media/NavRL-demo3.gif",children:(0,a.jsx)(n.img,{src:"https://github.com/Zhefan-Xu/NavRL/raw/main/media/NavRL-demo3.gif",alt:""})})})]})})]}),"\n",(0,a.jsx)(n.p,{children:"For more details, see the related paper here:"}),"\n",(0,a.jsxs)(n.p,{children:["Zhefan Xu, Xinming Han, Haoyu Shen, Hanyu Jin, and Kenji Shimada, \u201cNavRL: Learning Safe Flight in Dynamic Environments,\u201d ",(0,a.jsx)(n.em,{children:"IEEE Robotics and Automation Letters (RA-L)"}),", 2025. ",(0,a.jsx)(n.a,{href:"https://ieeexplore.ieee.org/document/10904341",children:"[IEEE Xplore]"})," ",(0,a.jsx)(n.a,{href:"https://arxiv.org/pdf/2409.15634",children:"[Preprint]"})," ",(0,a.jsx)(n.a,{href:"https://youtu.be/EbeJW8-YlvI",children:"[YouTube]"})," ",(0,a.jsx)(n.a,{href:"https://www.bilibili.com/video/BV1gsA9eTErz/?share_source=copy_web&vd_source=1333db331406abb1b5d4cece1e253427",children:"[BiliBili]"})]}),"\n",(0,a.jsx)(n.h2,{id:"news",children:"News"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"**2025-04-06:** We released an easy-to-run Python script that allows users to quickly run the demo."}),"\n",(0,a.jsx)(n.li,{children:"2025-02-23: The GitHub code, video demo, and accompanying paper for our NavRL framework have been released. The authors will actively maintain and update this repository!"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#I-Training-in-NVIDIA-Isaac-Sim",children:"NVIDIA Isaac Sim Training"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#II-Deployment-Virtual-Environment",children:"Deploy a virtual environment"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#III-NavRL-ROS1-Deployment",children:"NavRL ROS1 deployment"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#IV-NavRL-ROS2-Deployment",children:"NavRL ROS2 deployment"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#V-Citation-and-Reference",children:"Citations and References"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#VI-Acknowledgement",children:"Acknowledgements"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"a-quick-navrl",children:"A quick NavRL"}),"\n",(0,a.jsx)(n.p,{children:"We provide pre-trained models and easy-to-run Python scripts for quick demonstrations of the NavRL framework."}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL/blob/main/media/simple-navigation.gif",children:(0,a.jsx)(n.img,{src:"https://github.com/Zhefan-Xu/NavRL/raw/main/media/simple-navigation.gif",alt:""})})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL/blob/main/media/dynamic-navigation.gif",children:(0,a.jsx)(n.img,{src:"https://github.com/Zhefan-Xu/NavRL/raw/main/media/dynamic-navigation.gif",alt:""})})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL/blob/main/media/multi-robot-navigation.gif",children:(0,a.jsx)(n.img,{src:"https://github.com/Zhefan-Xu/NavRL/raw/main/media/multi-robot-navigation.gif",alt:""})})})]})})]}),"\n",(0,a.jsxs)(n.p,{children:["First, follow the steps in ",(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#II-Deployment-Virtual-Environment",children:"Deploy a virtual environment to set up a Conda environment. Once you have set up, you can run the following three demos using the following commands:"})]}),"\n",(0,a.jsx)(n.h2,{id:"1",children:"1."}),"\n",(0,a.jsxs)(n.p,{children:["This section describes the steps for training your own RL agent using the NavRL framework in Isaac Sim. ",(0,a.jsx)(n.strong,{children:"If you do not want to train the agent yourself, skip this section and jump directly to the deployment section."})]}),"\n",(0,a.jsx)(n.h3,{id:"isaac-sim",children:"Isaac Sim"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"This project"})," was developed using Isaac Sim version 2023.1.0-hotfix.1, released in November 2023. Please ensure you download and use the correct version, as using other versions may cause errors due to version incompatibilities. Also, ensure you have ",(0,a.jsx)(n.a,{href:"https://docs.anaconda.com/miniconda/",children:"conda"})," installed."]}),"\n",(0,a.jsx)(n.p,{children:"If you have already downloaded Isaac Sim 2023.1.0-hotfix.1, you can skip the following steps. Otherwise, follow the instructions below to download an older version of Isaac Sim, as the official installer does not support older versions."}),"\n",(0,a.jsx)(n.p,{children:"To download Isaac Sim version 2023.1.0-hotfix.1:"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://docs.isaacsim.omniverse.nvidia.com/latest/installation/install_container.html",children:"a. First, follow"})," the steps on this link to complete the Docker container setup."]}),"\n",(0,a.jsx)(n.p,{children:"b. Then, download Isaac Sim into your docker container:"}),"\n",(0,a.jsx)(n.p,{children:"c. Move the downloaded Isaac Sim from the docker container to your local computer:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"bash docker ps # check your container ID in another terminal\n\n# Replace <id_container> with the output from the previous command\ndocker cp <id_container>:isaac-sim/. /path/to/local/folder # absolute path\n"})}),"\n",(0,a.jsx)(n.p,{children:"Isaac Sim version 2023.1.0-hotfix.1 is now installed on your local computer."}),"\n",(0,a.jsx)(n.h3,{id:"navrl-training",children:"NavRL Training"}),"\n",(0,a.jsx)(n.p,{children:"To set up the NavRL framework, clone the repository and follow these steps (this process may take several minutes):"}),"\n",(0,a.jsxs)(n.p,{children:["Once the installation is complete, you should have created a virtual environment called ",(0,a.jsx)(n.code,{children:"NavRL"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"verify-the-installation-and-run-the-training",children:"Verify the installation and run the training"}),"\n",(0,a.jsx)(n.p,{children:"Verify the installation by running the training example with 2 robots using default parameters."}),"\n",(0,a.jsx)(n.p,{children:"If the repo is installed correctly, you should be able to see the Isaac Sim window as shown below:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://private-user-images.githubusercontent.com/55560905/415917292-14a4d8a8-e607-434f-af9d-42d0d945e8d7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTM5NDMxNDgsIm5iZiI6MTc1Mzk0Mjg0OCwicGF0aCI6Ii81NTU2MDkwNS80MTU5MTcyOTItMTRhNGQ4YTgtZTYwNy00MzRmLWFmOWQtNDJkMGQ5NDVlOGQ3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA3MzElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNzMxVDA2MjA0OFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWI3ZGZkYjY3ZWZlYzU4OTc2ZWZlZWIzMjA1ZWRlYzMwODk1NDJhZGM3ZWM3MjJmOWU3OTU0NDYxN2NmOGI2NTYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.FyrUtJMACdexDC5kEVPlWUcTfrtfh1dXwSXiY1ZI1V0",children:(0,a.jsx)(n.img,{src:"https://private-user-images.githubusercontent.com/55560905/415917292-14a4d8a8-e607-434f-af9d-42d0d945e8d7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTM5NDMxNDgsIm5iZiI6MTc1Mzk0Mjg0OCwicGF0aCI6Ii81NTU2MDkwNS80MTU5MTcyOTItMTRhNGQ4YTgtZTYwNy00MzRmLWFmOWQtNDJkMGQ5NDVlOGQ3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA3MzElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNzMxVDA2MjA0OFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWI3ZGZkYjY3ZWZlYzU4OTc2ZWZlZWIzMjA1ZWRlYzMwODk1NDJhZGM3ZWM3MjJmOWU3OTU0NDYxN2NmOGI2NTYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.FyrUtJMACdexDC5kEVPlWUcTfrtfh1dXwSXiY1ZI1V0",alt:"isaac training window"})})}),"\n",(0,a.jsx)(n.h3,{id:"training-your-own-rl",children:"Training Your Own RL"}),"\n",(0,a.jsxs)(n.p,{children:["The training environment settings and hyperparameters can be found in ",(0,a.jsx)(n.code,{children:"NavRL/isaac-training/training/cfg"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["The following example demonstrates how to train with 1024 robots, 350 static obstacles, and 80 dynamic obstacles (requires RTX 4090). We recommend using ",(0,a.jsx)(n.a,{href:"https://wandb.ai/site/",children:"Wandb"})," to monitor your training and evaluation statistics."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"python training/scripts/train.py headless=True env.num_envs=1024 env.num_obstacles=350 \\\nenv_dyn.num_obstacles=80 wandb.mode=online\n"})}),"\n",(0,a.jsx)(n.p,{children:"After enough training time, you should observe that the robot learns to avoid collisions:"}),"\n",(0,a.jsx)(n.p,{children:"isaac-training.mp4"}),"\n",(0,a.jsx)(n.h2,{id:"2-deploy-a-virtual",children:"2. Deploy a virtual"}),"\n",(0,a.jsxs)(n.p,{children:["This section provides the minimum conda environment setup required for deployment ",(0,a.jsx)(n.code,{children:"NavRL"})," (including running on a real robot). If you have already created a conda environment in ",(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/NavRL#I-Training-in-NVIDIA-Isaac-Sim",children:"the Isaac training step"})," ",(0,a.jsx)(n.code,{children:"NavRL"}),", you can skip this section. To create a conda environment, run the following command:"]}),"\n",(0,a.jsxs)(n.p,{children:["Once the installation is complete, ",(0,a.jsx)(n.code,{children:"NavRL"})," a conda environment named will be created. You can verify that the installation was successful by activating the environment:"]}),"\n",(0,a.jsx)(n.h2,{id:"iii-navrl-ros1",children:"III. NavRL ROS1"}),"\n",(0,a.jsx)(n.p,{children:"This section demonstrates how to deploy NavRL on a quadcopter robot using ROS1 and Gazebo. Please ensure that your system meets the following requirements:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Ubuntu 20.04 LTS"}),"\n",(0,a.jsx)(n.li,{children:"ROS1 cognition"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["First, install the dependencies and ",(0,a.jsx)(n.code,{children:"ros1"})," copy the folder from this repository to your catkin workspace."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"sudo apt-get install ros-noetic-mavros*\n\ncp -r ros1 /path/to/catkin_ws/src\ncatkin_make\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then, set the environment variables for the Gazebo model."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"echo 'source /path/to/ros1/uav_simulator/gazeboSetup.bash' >> ~/.bashrc\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Note that the environment variables should be set in catkin_ws. For example, the correct ",(0,a.jsx)(n.code,{children:"~./.bashrc"})," script should ",(0,a.jsx)(n.code,{children:"source ~/catkin_ws/src/ros1/uav_simulator/gazeboSetup.bash"})," be ",(0,a.jsx)(n.code,{children:"source path/to/NavRL/ros1/uav_simulator/gazeboSetup.bash"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Finally, start the simulation and deploy NavRL navigation."}),"\n",(0,a.jsxs)(n.p,{children:["The Gazebo window will display the environment, while the RViz window will display the data. Use RViz's ",(0,a.jsx)(n.code,{children:"2D Nav Goal"})," tools to set the navigation target, as shown in the video below (note: the default environment and settings may differ from the video):"]}),"\n",(0,a.jsx)(n.p,{children:"ros1-deployment.mp4"}),"\n",(0,a.jsxs)(n.p,{children:["To change the environment settings, look in the startup files ",(0,a.jsx)(n.code,{children:"ros1/uav_simulator/launch/start.launch"}),". Parameters for each module are located ",(0,a.jsx)(n.code,{children:"ros1/navigation_runner/cfg/*.yaml"})," in the configuration files."]}),"\n",(0,a.jsx)(n.h2,{id:"4-navrl-ros2",children:"4. NavRL ROS2"}),"\n",(0,a.jsx)(n.p,{children:"This section demonstrates how to deploy NavRL, ROS2, and Isaac Sim using a Unitree Go2 quadruped robot. Please ensure that your system meets the following requirements:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Ubuntu 22.04 LTS"}),"\n",(0,a.jsx)(n.li,{children:"ROS2 Humility"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Before you begin, install the emulator from ",(0,a.jsx)(n.a,{href:"https://github.com/Zhefan-Xu/isaac-go2-ros2",children:"this link."})]}),"\n",(0,a.jsxs)(n.p,{children:["First, ",(0,a.jsx)(n.code,{children:"ros2"})," copy the folders in this repository to your ros2 workspace."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"cp -r ros2 /path/to/ros2_ws/src\ncolcon build --symlink-install\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then, start the simulation and deploy NavRL navigation."}),"\n",(0,a.jsxs)(n.p,{children:["The Isaac Sim window will display the environment, while the RViz window will display the data. Use RViz's ",(0,a.jsx)(n.code,{children:"2D Nav Goal"})," tools to set the navigation target. An example of navigation is shown in the following video:"]}),"\n",(0,a.jsx)(n.p,{children:"go2-navigation.mp4"}),"\n",(0,a.jsxs)(n.p,{children:["Note that if you want to deploy in a real robot ",(0,a.jsx)(n.code,{children:"ros2 foxy"}),", please switch to ",(0,a.jsx)(n.code,{children:"ros2-foxy"})," the branch."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"git checkout ros2-foxy\n"})}),"\n",(0,a.jsx)(n.h2,{id:"5-citations-and",children:"5. Citations and"}),"\n",(0,a.jsx)(n.p,{children:"If our work is useful for your research, please consider citing our paper."}),"\n",(0,a.jsx)(n.h2,{id:"vi",children:"VI."}),"\n",(0,a.jsx)(n.p,{children:"The authors would like to express their sincere gratitude to Professor Kenji Shimada for his strong support and all the members of the CERLAB UAV team who contributed to the development of this research."}),"\n",(0,a.jsxs)(n.p,{children:["The Isaac Sim training component of the NavRL framework is built on top of ",(0,a.jsx)(n.a,{href:"https://github.com/btx0424/OmniDrones",children:"OmniDrones"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var t=i(6540);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);