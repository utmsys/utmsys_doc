"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[7402],{5129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"System_Config/RDK X5 Module/frequency_management","title":"5.2.4 Thermal & CPU Frequency Management","description":"X5","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/05_System_Config/02_RDK X5 Module/04_frequency_management.md","sourceDirName":"05_System_Config/02_RDK X5 Module","slug":"/System_Config/RDK X5 Module/frequency_management","permalink":"/en/System_Config/RDK X5 Module/frequency_management","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"5.2.4 Thermal & CPU Frequency Management","source":"https://wiki.utmsys.org/System_Config/RDK%20X5%20Module/frequency_management"},"sidebar":"tutorialSidebar","previous":{"title":"5.2.3 config.txt file ","permalink":"/en/System_Config/RDK X5 Module/config_txt"},"next":{"title":"5.2.5 Auto Start ","permalink":"/en/System_Config/RDK X5 Module/self_start"}}');var s=t(4848),c=t(8453);const i={title:"5.2.4 Thermal & CPU Frequency Management",source:"https://wiki.utmsys.org/System_Config/RDK%20X5%20Module/frequency_management"},a=void 0,o={},l=[{value:"X5",id:"x5",level:2},{value:"Thermal",id:"thermal",level:3},{value:"Temperature",id:"temperature",level:4},{value:"Thermal",id:"thermal-1",level:4},{value:"CPU Frequency",id:"cpu-frequency",level:3},{value:"CPU",id:"cpu",level:4}];function h(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"x5",children:"X5"}),"\n",(0,s.jsx)(n.h3,{id:"thermal",children:"Thermal"}),"\n",(0,s.jsx)(n.h4,{id:"temperature",children:"Temperature"}),"\n",(0,s.jsx)(n.p,{children:"There are three temperature sensors on the X5, which are used to display the temperature of the DDR, BPU, and CPU. The hwmon0 directory in /sys/class/hwmon/ contains the relevant parameters of the temperature sensors. temp1_input is the temperature of the DDR, temp2_input is the temperature of the BPU, and temp3_input is the temperature of the CPU. The temperature accuracy is 0.001 degrees Celsius."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /sys/class/hwmon/hwmon0/temp1_input\n46643\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"The BPU temperature sensor is located in the BPU subsystem. The BPU subsystem is powered on only when the BPU is running. Therefore, the BPU temperature can be checked only when the BPU is running."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"thermal-1",children:"Thermal"}),"\n",(0,s.jsx)(n.p,{children:"Linux Thermal is a temperature control module under Linux system. It is mainly used to control the heat generated by the chip during system operation, so that the chip temperature and device casing temperature are maintained in a safe and comfortable range."}),"\n",(0,s.jsx)(n.p,{children:"To achieve reasonable control of device temperature, we need to understand the following three modules:"}),"\n",(0,s.jsx)(n.p,{children:"The device that obtains temperature is abstracted as a Thermal Zone Device in the Thermal framework. The X5 has two thermal zones: thermal_zone0 and thermal_zone1."}),"\n",(0,s.jsx)(n.p,{children:"Devices that require cooling: These are abstracted as Thermal Cooling Devices in the Thermal framework, including CPUs, BPUs, GPUs, and DDRs."}),"\n",(0,s.jsx)(n.p,{children:"Temperature control strategy: abstracted as Thermal Governor in the Thermal framework;"}),"\n",(0,s.jsx)(n.p,{children:"Information and control of the above modules can be obtained in the /sys/class/thermal directory."}),"\n",(0,s.jsx)(n.p,{children:"There are four cooling devices in the X5:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"cooling_device0: cpu"}),"\n",(0,s.jsx)(n.li,{children:"cooling_device1: bpu"}),"\n",(0,s.jsx)(n.li,{children:"cooling_device2: gpu"}),"\n",(0,s.jsx)(n.li,{children:"cooling_device3: ddr"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The DDR cooling device is associated with thermal_zone 0, and the CPU/BPU/GPU cooling devices are associated with thermal_zone 1. The default strategy is step_wise, as shown in the following command."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /sys/class/thermal/thermal_zone0/policy\n"})}),"\n",(0,s.jsx)(n.p,{children:"The following commands can be used to view the supported strategies: user_space and step_wise."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /sys/class/thermal/thermal_zone0/available_policies\n"})}),"\n",(0,s.jsx)(n.p,{children:"User_space reports the current temperature of the temperature zone, temperature control trigger point and other information to the user space through uevent, and the user space software formulates the temperature control strategy."}),"\n",(0,s.jsx)(n.p,{children:"step_wise is a relatively mild temperature control strategy that gradually improves the cooling state in each polling cycle."}),"\n",(0,s.jsx)(n.p,{children:"The specific strategy to choose is based on the product needs. It can be specified at compile time or dynamically switched through sysfs. For example: dynamically switch the strategy of thermal_zone0 to user_space mode"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo user_space > /sys/class/thermal/thermal_zone0/policy\n"})}),"\n",(0,s.jsx)(n.p,{children:"There is a trip_point in thermal_zone0, which is used to control the frequency modulation temperature of the cooling device DDR"}),"\n",(0,s.jsx)(n.p,{children:"You can view the DDR frequency modulation temperature through sysfs. The current configuration is 95 degrees."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /sys/devices/virtual/thermal/thermal_zone0/trip_point_0_temp\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you want to adjust the DDR frequency modulation temperature, such as 85 degrees, you can use the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo 85000 > /sys/devices/virtual/thermal/thermal_zone0/trip_point_0_temp\n"})}),"\n",(0,s.jsx)(n.p,{children:"There are three trip_points in thermal_zone1, of which trip_point_0_temp is reserved. Trip_point_1_temp is the frequency modulation temperature of the thermal zone, which controls the CPU/BPU/GPU frequency and is currently set to 95 degrees. Trip_point_2_temp is the shutdown temperature and is currently set to 105 degrees. For example, if you want the junction temperature to reach 85 degrees Celsius, the CPU/BPU/GPU will start frequency modulation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo 85000 > /sys/devices/virtual/thermal/thermal_zone1/trip_point_1_temp\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you want to adjust the shutdown temperature to 105 degrees Celsius:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo 105000 > /sys/devices/virtual/thermal/thermal_zone1/trip_point_2_temp\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"The above settings need to be reset after power off and restart"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"cpu-frequency",children:"CPU Frequency"}),"\n",(0,s.jsx)(n.p,{children:"In the Linux kernel, there is a built-in cpufreq subsystem to control the CPU frequency and frequency control strategy."}),"\n",(0,s.jsxs)(n.p,{children:["Enter the directory ",(0,s.jsx)(n.code,{children:"/sys/devices/system/cpu/cpufreq/policy0"})," and ",(0,s.jsx)(n.code,{children:"ls"})," you will see the following files in the directory:"]}),"\n",(0,s.jsx)(n.p,{children:"Currently supported frequencies include"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies\n300000 600000 1200000 1500000\n"})}),"\n",(0,s.jsx)(n.p,{children:"The Linux kernel used in the RDK X5 system supports the following frequency scaling strategies:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Performance: Always put the CPU into the highest energy consumption and highest performance state, that is, the highest frequency supported by the hardware."}),"\n",(0,s.jsx)(n.li,{children:"performance: execute at the highest frequency"}),"\n",(0,s.jsx)(n.li,{children:"ondemand: adjust the frequency according to the load"}),"\n",(0,s.jsx)(n.li,{children:"Userspace: according to the user's setting frequency"}),"\n",(0,s.jsx)(n.li,{children:"powersave: execute at the lowest frequency"}),"\n",(0,s.jsx)(n.li,{children:"schedutil: adjusts the frequency according to the load, which is used in conjunction with the CPU scheduler"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Users can ",(0,s.jsx)(n.code,{children:"/sys/devices/system/cpu/cpu0/cpufreq/"})," control the CPU frequency regulation strategy through the corresponding settings in the control directory."]}),"\n",(0,s.jsx)(n.p,{children:"For example, to run the CPU in performance mode:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"echo performance >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or control the CPU to run at a fixed frequency (1.2GHz):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"echo userspace >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\necho 1200000 >/sys/devices/system/cpu/cpufreq/policy0/scaling_setspeed\n"})}),"\n",(0,s.jsx)(n.h4,{id:"cpu",children:"CPU"}),"\n",(0,s.jsxs)(n.p,{children:["The development board uses the CPU Freq driver to manage the CPU operating state. The default mode is ",(0,s.jsx)(n.code,{children:"schedutil"})," mode. At this time, the CPU operating frequency will be dynamically adjusted according to the load to save power. The user can change ",(0,s.jsx)(n.code,{children:"performance"})," the mode to make the CPU always run at the highest frequency. The command is as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo performance >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\n"})}),"\n",(0,s.jsx)(n.p,{children:"The development board provides an overclocking function in the system, which can increase the maximum CPU frequency from 1.5GHz to 1.8GHz. The configuration command is as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo 1 >/sys/devices/system/cpu/cpufreq/boost\necho performance >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\n"})}),"\n",(0,s.jsx)(n.p,{children:"The CPU frequency configured using the above command is only effective during the current operation. If the device is restarted, the default configuration will be restored."}),"\n",(0,s.jsxs)(n.p,{children:["You can use ",(0,s.jsx)(n.code,{children:"sudo hrut_somstatus"})," the command to view the current chip operating frequency, temperature and other status:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/02_System_configuration/image/cpu_frequency/image-20240829171934000.png",alt:"image-20240829171934000"})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},c=r.createContext(s);function i(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);