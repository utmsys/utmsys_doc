"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[9075],{6902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Image_Flash/Pixhawk 6X","title":"3.1 Pixhawk 6X ","description":"Installing PX4","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/03_Image_Flash/01_Pixhawk 6X.md","sourceDirName":"03_Image_Flash","slug":"/Image_Flash/Pixhawk 6X","permalink":"/en/Image_Flash/Pixhawk 6X","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"3.1 Pixhawk 6X ","source":"https://wiki.utmsys.org/Image_Flash/Pixhawk%206X"},"sidebar":"tutorialSidebar","previous":{"title":"3. \u955c\u50cf\u70e7\u5f55","permalink":"/en/03_Image_Flash"},"next":{"title":"3.2 RDK X5 Module ","permalink":"/en/Image_Flash/RDK X5 Module"}}');var r=t(4848),o=t(8453);const s={title:"3.1 Pixhawk 6X ",source:"https://wiki.utmsys.org/Image_Flash/Pixhawk%206X"},l="3.1 Pixhawk 6X",a={},d=[{value:"Installing PX4",id:"installing-px4",level:2},{value:"Install PX4 stable",id:"install-px4-stable",level:3},{value:"Installing PX4 main firmware, beta firmware, or custom",id:"installing-px4-main-firmware-beta-firmware-or-custom",level:3},{value:"Bootloader",id:"bootloader",level:3},{value:"Install",id:"install",level:2},{value:"Download PX4 source",id:"download-px4-source",level:3},{value:"Setting up the development",id:"setting-up-the-development",level:3},{value:"Building PX4",id:"building-px4",level:3},{value:"Uploading firmware to",id:"uploading-firmware-to",level:3},{value:"Firmware Versions and Git",id:"firmware-versions-and-git",level:2},{value:"More",id:"more",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"31-pixhawk-6x",children:"3.1 Pixhawk 6X"})}),"\n",(0,r.jsx)(n.h2,{id:"installing-px4",children:"Installing PX4"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The desktop version"})," ",(0,r.jsx)(n.em,{children:"of QGroundControl"})," can be used to install PX4 firmware onto ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/getting_started/flight_controller_selection.html",children:"Pixhawk series"})," flight controller boards."]}),"\n",(0,r.jsx)(n.h3,{id:"install-px4-stable",children:"Install PX4 stable"}),"\n",(0,r.jsx)(n.p,{children:"In general, you should use the most recently released version of PX4 to benefit from bug fixes and get the latest and greatest features."}),"\n",(0,r.jsx)(n.p,{children:"To install PX4:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Start the ",(0,r.jsx)(n.em,{children:"QGroundControl"})," software."]}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.strong,{children:'the "Q" icon > Vehicle Settings > Firmware'})," (sidebar) to open ",(0,r.jsx)(n.em,{children:"the firmware settings"}),".",(0,r.jsx)(n.img,{src:"https://docs.px4.io/main/assets/firmware_disconnected.CJWD7ZG9.png",alt:"Firmware Disconnected"})]}),"\n",(0,r.jsx)(n.li,{children:"Connect the Fly Controller directly to your computer using a USB cable. Connect directly to a powered USB port on the machine (do not connect through a USB hub)."}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.strong,{children:"the PX4 Pro Stable Release vX.xx option"})," to install the latest stable version of PX4 ",(0,r.jsx)(n.em,{children:"for your flight controller (auto-detect)."}),(0,r.jsx)(n.img,{src:"https://docs.px4.io/main/assets/firmware_connected_default_px4.DnMTNECe.png",alt:"PX4 is installed by default"})]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:'"OK"'})," button to begin the update. The firmware will go through a series of upgrade steps (downloading new firmware, purging old firmware, etc.). Each step will be printed on the screen, and the overall progress will be displayed on a progress bar. ",(0,r.jsx)(n.img,{src:"https://docs.px4.io/main/assets/firmware_upgrade_complete.DMEyPOR-.png",alt:"Firmware upgrade completed"})," Once the firmware has finished loading, the device/vehicle will reboot and reconnect. Note: If ",(0,r.jsx)(n.em,{children:"QGroundControl"})," installs the FMUv2 target (check the console during installation) and you have a newer motherboard, you may need to ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/config/#bootloader",children:"update the bootloader"})," to access all the memory on the flight controller."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Next you need to specify ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/config/airframe.html",children:"the vehicle body"})," (and then sensors, radios, etc.)"]}),"\n",(0,r.jsx)(n.h3,{id:"installing-px4-main-firmware-beta-firmware-or-custom",children:"Installing PX4 main firmware, beta firmware, or custom"}),"\n",(0,r.jsx)(n.p,{children:"To install a different version of PX4:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Connect your vehicle as described above and select ",(0,r.jsx)(n.strong,{children:"PX4 Pro Stable Release"})," vX.xx.",(0,r.jsx)(n.img,{src:"https://docs.px4.io/main/assets/qgc_choose_firmware.t3yhPVFd.png",alt:"Install the PX4 version"})]}),"\n",(0,r.jsxs)(n.li,{children:["Check ",(0,r.jsx)(n.strong,{children:"Advanced Settings"})," and select a version from the drop-down list:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standard (Stable):"})," The default version (i.e. no need to use advanced setup to install!)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Beta Testing (beta):"})," A beta version/release candidate. Available only when a new version is ready for release."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developer builds (master):"})," Latest versions of the PX4/PX4-Autopilot ",(0,r.jsx)(n.em,{children:"master branch."})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom firmware file...:"})," Custom firmware file (for example, ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/dev_setup/building_px4.html",children:"a firmware file you built locally"})," ). If you select this option, you will need to select the custom firmware in the file system in the next step."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Firmware updates will continue as before."}),"\n",(0,r.jsx)(n.h3,{id:"bootloader",children:"Bootloader"}),"\n",(0,r.jsx)(n.p,{children:"Pixhawk hardware usually comes pre-installed with an appropriate bootloader version."}),"\n",(0,r.jsxs)(n.p,{children:["The only case where you might need to update is with a newer Pixhawk board that has the FMUv2 firmware installed. If ",(0,r.jsx)(n.em,{children:"QGroundControl"})," installs the FMUv2 target (check the console during installation), and you have a newer board, you may need to update the bootloader to access all the memory on the flight controller."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://docs.px4.io/main/assets/bootloader_update.CtSY8ezO.jpg",alt:"FMUv2 Updates"})}),"\n",(0,r.jsxs)(n.p,{children:["You can update it by following the instructions in ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/advanced_config/bootloader_update.html#fmuv2-bootloader-update",children:"Bootloader Update > FMUv2 Bootloader Update."})]}),"\n",(0,r.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,r.jsx)(n.p,{children:"PX4 firmware can be built from source code on the console or on the IDE, and is suitable for both simulator and hardware targets."}),"\n",(0,r.jsx)(n.h3,{id:"download-px4-source",children:"Download PX4 source"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/PX4/PX4-Autopilot",children:"The PX4 source code is stored in the PX4/PX4-Autopilot"})," repository on Github."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"git clone https://github.com/PX4/PX4-Autopilot.git --recursive\n"})}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-the-development",children:"Setting up the development"}),"\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.a,{href:"https://github.com/PX4/PX4-Autopilot/blob/main/Tools/setup/ubuntu.sh",children:"ubuntu.sh"})," script to set up your development environment, allowing you to compile for the simulator or ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/dev_setup/building_px4.html#nuttx-pixhawk-based-boards",children:"NuttX/Pixhawk"})," toolchain. This script is designed to be run on a clean Ubuntu LTS installation and may not work if run on an existing system or a different Ubuntu version. The environment setup scripts in the source code are generally suitable for newer PX4 versions. If you are using an older version of PX4, you may need to ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/contribute/git_examples.html#get-a-specific-release",children:"obtain the source code specific to your version"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Run ubuntu.sh"})," with no arguments (in a bash shell) to install everything:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"bash ./PX4-Autopilot/Tools/setup/ubuntu.sh\n"})}),"\n",(0,r.jsx)(n.p,{children:"Once completed restart your Ubuntu PC computer."}),"\n",(0,r.jsx)(n.h3,{id:"building-px4",children:"Building PX4"}),"\n",(0,r.jsxs)(n.p,{children:["To build for a NuttX or Pixhawk based board, navigate to ",(0,r.jsx)(n.strong,{children:"the PX4-Autopilot"})," directory and ",(0,r.jsx)(n.code,{children:"make"})," invoke it with the build target for your board."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, to build for ",(0,r.jsx)(n.a,{href:"https://docs.px4.io/main/en/flight_controller/pixhawk6x.html",children:"the Pixhawk 6X"})," hardware, you would use the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"cd PX4-Autopilot\nmake make px4_fmu-v6x_default\n"})}),"\n",(0,r.jsx)(n.p,{children:"A successful run will end with output similar to the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"-- Build files have been written to: /home/youruser/src/PX4-Autopilot/build/px4_fmu-v6x_default\n[954/954] Creating /home/youruser/src/PX4-Autopilot/build/px4_fmu-v6x_default/px4_fmu-v6x_default.px4\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The first part of the build target ",(0,r.jsx)(n.code,{children:"px4_fmu-v6x"})," indicates the target flight controller hardware for the firmware. The suffix (in this case ",(0,r.jsx)(n.code,{children:"_default"}),") indicates the firmware configuration, such as whether specific features are supported or omitted."]}),"\n",(0,r.jsx)(n.h3,{id:"uploading-firmware-to",children:"Uploading firmware to"}),"\n",(0,r.jsxs)(n.p,{children:["Append ",(0,r.jsx)(n.code,{children:"upload"})," to the make command, connect the Pixhawk flight controller to the Ubuntu PC via USB cable and use the following command to upload the compiled binary file to the autopilot hardware. For example"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"make px4_fmu-v6x_default upload\n"})}),"\n",(0,r.jsx)(n.p,{children:"A successful run will end with this output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"Erase  : [====================] 100.0%\nProgram: [====================] 100.0%\nVerify : [====================] 100.0%\nRebooting.\n\n[100%] Built target upload\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can also list all configuration targets with the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"make list_config_targets\n"})}),"\n",(0,r.jsx)(n.h2,{id:"firmware-versions-and-git",children:"Firmware Versions and Git"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"PX4 firmware versions"})," and ",(0,r.jsx)(n.em,{children:"custom firmware versions are published using the MAVLink"})," ",(0,r.jsx)(n.a,{href:"https://mavlink.io/en/messages/common.html#AUTOPILOT_VERSION",children:"AUTOPILOT_VERSION"})," message and are displayed in the ",(0,r.jsx)(n.em,{children:"QGroundControl"})," ",(0,r.jsx)(n.strong,{children:"Settings > Summary"})," panel:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://docs.px4.io/main/assets/qgc_setup_summary_airframe_firmware.CcZm2RSp.jpg",alt:"Firmware Information"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"These are pulled from the active git tag"})," of your repository tree at build time . The git tag should be of the form ",(0,r.jsx)(n.code,{children:"<PX4-version>-<vendor-version>"})," (for example, the tags in the image above are set to ",(0,r.jsx)(n.code,{children:"v1.8.1-2.22.1"}),")."]}),"\n",(0,r.jsx)(n.p,{children:"If you use a different git tag format, version information may not display correctly."}),"\n",(0,r.jsx)(n.h2,{id:"more",children:"More"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://docs.qgroundcontrol.com/master/en/qgc-user-guide/setup_view/firmware.html",children:"QGroundControl User Guide > Firmware"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://youtu.be/91VGmdSlbo4",children:"PX4 Setup Video"})," (Youtube)"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);