"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[5393],{6287:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Product_Overview/USX51/Baseboard","title":"1.1.1 Baseboard ","description":"Overall","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/01_Product_Overview/01_USX51/01_Baseboard.md","sourceDirName":"01_Product_Overview/01_USX51","slug":"/Product_Overview/USX51/Baseboard","permalink":"/en/Product_Overview/USX51/Baseboard","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"1.1.1 Baseboard ","source":"https://wiki.utmsys.org/Product_Overview/USX51/Baseboard/"},"sidebar":"tutorialSidebar","previous":{"title":"1.1 USX51","permalink":"/en/01_USX51"},"next":{"title":"1.1.2 Pixhawk 6X ","permalink":"/en/Product_Overview/USX51/Pixhawk 6X"}}');var o=r(4848),a=r(8453);const i={title:"1.1.1 Baseboard ",source:"https://wiki.utmsys.org/Product_Overview/USX51/Baseboard/"},s="1.1.1 Baseboard",c={},d=[{value:"Overall",id:"overall",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"111-baseboard",children:"1.1.1 Baseboard"})}),"\n",(0,o.jsx)(t.h2,{id:"overall",children:"Overall"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://wiki.utmsys.org/assets/images/USX51%E5%9B%BE1%201-b45fbd86d37d235bc7875e68de1fe70d.jpg",alt:""})}),"\n",(0,o.jsx)(t.p,{children:"The USX51 computing power flight controller is composed of a Pixhawk 6X flight controller and the Digua Robot RDK X5 Module computing power module. It has an AI computing power of 10TOPS and can run various neural network algorithms, including visual recognition, multi-target tracking, instance segmentation, human skeleton recognition, target statistics, reinforcement learning, etc. The CPU general computing power reaches 21.6 DMIPS/MHz, which can run VIO visual odometry, LIO lidar odometry, 2D SLAM mapping and positioning, Navgation2 navigation, path planning and other algorithms to adapt to various application scenarios."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://wiki.utmsys.org/assets/images/USX51%E6%8E%A5%E5%8F%A3%E5%BD%A9%E5%9B%BE4-d92e4bba79d02b822bcad096db5cc15c.jpg",alt:""})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://wiki.utmsys.org/assets/images/USX51diagram2-50995dbded8f07553d02dee6a9e0e009.jpg",alt:""})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var n=r(6540);const o={},a=n.createContext(o);function i(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);