"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[5005],{2794:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Debug_Commands/PX4","title":"PX4 ","description":"Common","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/10_Debug_Commands/PX4.md","sourceDirName":"10_Debug_Commands","slug":"/Debug_Commands/PX4","permalink":"/en/Debug_Commands/PX4","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"PX4 ","source":"https://wiki.utmsys.org/Debug_Commands/PX4"},"sidebar":"tutorialSidebar","previous":{"title":"Linux","permalink":"/en/Debug_Commands/Linux"},"next":{"title":"ROS2","permalink":"/en/Debug_Commands/ROS2"}}');var i=s(4848),o=s(8453);const r={title:"PX4 ",source:"https://wiki.utmsys.org/Debug_Commands/PX4"},l=void 0,a={},c=[{value:"Common",id:"common",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Using PlotJuggler to plot uORB topic",id:"using-plotjuggler-to-plot-uorb-topic",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"common",children:"Common"}),"\n",(0,i.jsxs)(n.p,{children:["uorb top This command ",(0,i.jsx)(n.code,{children:"uorb top"})," displays the publishing frequency of each topic in real time:"]}),"\n",(0,i.jsx)(n.p,{children:"listener sensor_accel 5"}),"\n",(0,i.jsx)(n.p,{children:"ls /obj"}),"\n",(0,i.jsx)(n.p,{children:"uxrce_dds_client status"}),"\n",(0,i.jsx)(n.p,{children:"stop show"}),"\n",(0,i.jsx)(n.p,{children:"commander"}),"\n",(0,i.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,i.jsx)(n.h2,{id:"using-plotjuggler-to-plot-uorb-topic",children:"Using PlotJuggler to plot uORB topic"}),"\n",(0,i.jsxs)(n.p,{children:["This topic shows how to use ",(0,i.jsx)(n.a,{href:"https://docs.px4.io/main/en/log/flight_log_analysis.html#plotjuggler",children:"PlotJuggler"}),' and the uXRCE-DDS agent to graph "live" values of ',(0,i.jsx)(n.a,{href:"https://docs.px4.io/main/en/msg_docs/",children:"a uORB topic."})]}),"\n",(0,i.jsxs)(n.p,{children:["The technique uses the PX4 ",(0,i.jsx)(n.a,{href:"https://docs.px4.io/main/en/middleware/uxrce_dds.html",children:"uXRCE-DDS"})," middleware to export uORB topics as ROS2 topics, which PlotJuggler can then read and plot changes to (PlotJuggler cannot read uORB topics directly, but the values of the corresponding ROS 2 topics are the same)."]}),"\n",(0,i.jsx)(n.p,{children:"The video below demonstrates this using a simulated vehicle \u2013 the approach also works on real hardware."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.p,{children:["Install by following ",(0,i.jsx)(n.a,{href:"https://docs.px4.io/main/en/ros2/user_guide.html#installation-setup",children:"the ROS 2 installation and setup"})," instructions in the ROS 2 User Guide:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ROS 2"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.px4.io/main/en/ros2/user_guide.html#setup-micro-xrce-dds-agent-client",children:"Tiny XRCE-DDS Proxy"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/PX4/px4_msgs",children:"PX4/px4_msgs"}),": PX4/ROS2 shared message definitions."]}),"\n",(0,i.jsx)(n.li,{children:"PX4 source code and build the simulator.\nhint\nIf you are using real hardware instead of a simulator, you only need the PX4 source code if you need to change the set of topics published to ROS 2 (only a subset of uORB topics are published by default)."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You will also need to install:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/facontidavide/PlotJuggler",children:"PlotJuggler for ROS2"}),"\nhint\nUse Debian packages (snap files are not supported)."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["First, we need to build a ROS 2 workspace that contains the files corresponding to the PX4 version we want to monitor, and then start PlotJuggler in that workspace. This will allow ROS 2 and PlotJuggler to parse the messages. If you are using unmodified PX4, you can use the definitions in ",(0,i.jsx)(n.a,{href:"https://github.com/PX4/px4_msgs",children:"PX4/px4_msgs."}),(0,i.jsx)(n.code,{children:"px4_msgs"})]}),"\n",(0,i.jsx)(n.p,{children:"information"}),"\n",(0,i.jsxs)(n.p,{children:["This is the same process described in ",(0,i.jsx)(n.a,{href:"https://docs.px4.io/main/en/ros2/user_guide.html#build-ros-2-workspace",children:"Building a ROS 2 Workspace"})," in ROS 2 Installation and Setup."]}),"\n",(0,i.jsxs)(n.p,{children:["Assuming your ROS 2 workspace is named, ",(0,i.jsx)(n.code,{children:"~/ros2_ws/"})," get and build the package in your terminal as follows:",(0,i.jsx)(n.code,{children:"px4_msgs"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"cd ~/ros2_ws/src/\ngit clone https://github.com/PX4/px4_msgs.git\ncd ..\ncolcon build\nsource install/setup.bash\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then run PlotJuggler by entering the following command in Terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"ros2 run plotjuggler plotjuggler\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To start sending ROS 2 topics from PX4, the uXRCE-DDS ",(0,i.jsx)(n.strong,{children:"client"})," must be running on PX4 and ",(0,i.jsx)(n.code,{children:"MicroXRCEAgent"})," must be running on the same machine as PlotJuggler."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);