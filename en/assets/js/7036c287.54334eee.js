"use strict";(self.webpackChunkutm_doc=self.webpackChunkutm_doc||[]).push([[97],{1238:(a,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>m,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"Algorithm_Development/SIMULATOR/SITL/Gazebo/Sensor/D435i/ros2 humble realsense d435i in gazebo \xb7 Issue 1070 \xb7 introlabrtabmap_ros","title":"ros2 humble realsense d435i in gazebo \xb7 Issue 1070 \xb7 introlabrtabmap_ros","description":"\u5143-0816","source":"@site/docs/09_Algorithm_Development/05_SIMULATOR/SITL/Gazebo/Sensor/D435i/ros2 humble realsense d435i in gazebo \xb7 Issue 1070 \xb7 introlabrtabmap_ros.md","sourceDirName":"09_Algorithm_Development/05_SIMULATOR/SITL/Gazebo/Sensor/D435i","slug":"/Algorithm_Development/SIMULATOR/SITL/Gazebo/Sensor/D435i/ros2 humble realsense d435i in gazebo \xb7 Issue 1070 \xb7 introlabrtabmap_ros","permalink":"/en/Algorithm_Development/SIMULATOR/SITL/Gazebo/Sensor/D435i/ros2 humble realsense d435i in gazebo \xb7 Issue 1070 \xb7 introlabrtabmap_ros","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"source":"https://github.com/introlab/rtabmap_ros/issues/1070","published":"2023-11-23T00:00:00.000Z","created":"2025-07-07T00:00:00.000Z"},"sidebar":"tutorialSidebar","previous":{"title":"Gazebo\u4f7f\u7528Realsense D435i SLAM&PX4\u4eff\u771f","permalink":"/en/Algorithm_Development/SIMULATOR/SITL/Gazebo/Sensor/D435i/Gazebo\u4f7f\u7528Realsense D435i SLAM&PX4\u4eff\u771f"},"next":{"title":"World","permalink":"/en/Algorithm_Development/SIMULATOR/SITL/Gazebo/World/"}}');var t=r(4848),o=r(8453);const i={source:"https://github.com/introlab/rtabmap_ros/issues/1070",published:new Date("2023-11-23T00:00:00.000Z"),created:new Date("2025-07-07T00:00:00.000Z")},m=void 0,s={},p=[];function d(a){const e={a:"a",br:"br",code:"code",p:"p",pre:"pre",...(0,o.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://github.com/yuan-0816",children:"\u5143-0816"})}),"\n",(0,t.jsxs)(e.p,{children:["\u6211\u60f3\u5728 Gazebo \u4e2d\u6a21\u62df RealSense D435i\uff0c\u5e76\u4f7f\u7528 RTAB-Map \u8fdb\u884c\u5b9a\u4f4d\u3002",(0,t.jsx)(e.br,{}),"\n","\u4f46\u662f RTAB-Map \u65e0\u6cd5\u63a5\u6536\u6444\u50cf\u5934\u4e3b\u9898\u3002"]}),"\n",(0,t.jsx)(e.p,{children:"\u8fd9\u662f\u6211\u7684 xacro \u548c\u542f\u52a8\u6587\u4ef6\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'<?xml version="1.0"?>\n\x3c!--\nAknolegment: This file was originally copied from the realsense repository of\npal-robotics-forks( https://github.com/pal-robotics-forks/realsense/ )\nand then modified.\n\nLicense: Apache 2.0. See LICENSE file in root directory.\nCopyright(c) 2017 PAL Robotics, S.L. All Rights Reserved\n\nThis is the Gazebo URDF model for the Intel RealSense D435i camera\n--\x3e\n<robot xmlns:xacro="http://ros.org/wiki/xacro">\n    <xacro:macro name="gazebo_d435i" params=" reference_link\n                                            camera_name:=camera\n                                            topics_ns:=camera\n\n                                            depth_optical_frame\n                                            color_optical_frame\n                                            infrared1_optical_frame\n                                            infrared2_optical_frame\n                                            accel_optical_frame\n                                            gyro_optical_frame\n\n                                            visualize:=false\n                                            align_depth:=false\n                                            enable_pointCloud:=false\n\n                                            unite_imu_method:=false\n                                            accel_fps:=250\n                                            gyro_fps:=400\n\n                                            clip_distance:=-1.0\n                                            depth_width:=1280\n                                            depth_height:=720\n                                            depth_fps:=30\n\n                                            infra_width:=640\n                                            infra_height:=480\n                                            infra_fps:=30\n\n                                            color_width:=1920\n                                            color_height:=1080\n                                            color_fps:=30\n                                            ">\n        \x3c!-- Load parameters to model\'s main link--\x3e\n        <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>\n        <gazebo reference="${reference_link}">\n            <self_collide>0</self_collide>\n            <enable_wind>0</enable_wind>\n            <kinematic>0</kinematic>\n            \x3c!-- <gravity>1</gravity> --\x3e\n            \x3c!--<mu>1</mu>--\x3e\n            <mu2>1</mu2>\n            <fdir1>0 0 0</fdir1>\n            \x3c!--<slip1>0</slip1>\n      <slip2>0</slip2>--\x3e\n            <kp>1e+13</kp>\n            <kd>1</kd>\n            \x3c!--<max_vel>0.01</max_vel>\n      <min_depth>0</min_depth>--\x3e\n            <sensor name="${camera_name}color" type="camera">\n                <camera name="${camera_name}">\n                    <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>\n                    <image>\n                        <width>${color_width}</width>\n                        <height>${color_height}</height>\n                        <format>RGB_INT8</format>\n                    </image>\n                    <clip>\n                        <near>0.1</near>\n                        <far>100</far>\n                    </clip>\n                    <noise>\n                        <type>gaussian</type>\n                        <mean>0.0</mean>\n                        <stddev>0.007</stddev>\n                    </noise>\n                </camera>\n                <always_on>1</always_on>\n                <update_rate>${color_fps}</update_rate>\n                <visualize>${visualize}</visualize>\n            </sensor>\n            <sensor name="${camera_name}ired1" type="camera">\n                <camera name="${camera_name}">\n                    <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>\n                    <image>\n                        <width>${infra_width}</width>\n                        <height>${infra_height}</height>\n                        <format>L_INT8</format>\n                    </image>\n                    <clip>\n                        <near>0.1</near>\n                        <far>100</far>\n                    </clip>\n                    <noise>\n                        <type>gaussian</type>\n                        <mean>0.0</mean>\n                        <stddev>0.05</stddev>\n                    </noise>\n                </camera>\n                <always_on>1</always_on>\n                <update_rate>${infra_fps}</update_rate>\n                <visualize>false</visualize>\n            </sensor>\n            <sensor name="${camera_name}ired2" type="camera">\n                <camera name="${camera_name}">\n                    <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>\n                    <image>\n                        <width>${infra_width}</width>\n                        <height>${infra_height}</height>\n                        <format>L_INT8</format>\n                    </image>\n                    <clip>\n                        <near>0.1</near>\n                        <far>100</far>\n                    </clip>\n                    <noise>\n                        <type>gaussian</type>\n                        <mean>0.0</mean>\n                        <stddev>0.05</stddev>\n                    </noise>\n                </camera>\n                <always_on>1</always_on>\n                <update_rate>${infra_fps}</update_rate>\n                <visualize>false</visualize>\n            </sensor>\n            <sensor name="${camera_name}depth" type="depth">\n                <camera name="${camera_name}">\n                    \x3c!-- align-depth settings --\x3e\n                    <xacro:unless value="${align_depth}">\n                        <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>\n                        <image>\n                            <width>${depth_width}</width>\n                            <height>${depth_height}</height>\n                        </image>\n                    </xacro:unless>\n                    <xacro:if value="${align_depth}">\n                        <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>\n                        <image>\n                            <width>${color_width}</width>\n                            <height>${color_height}</height>\n                        </image>\n                    </xacro:if>\n                    <clip>\n                        <near>0.1</near>\n                        <xacro:unless value="${clip_distance > 0.0}">\n                            <far>100</far>\n                        </xacro:unless>\n                        <xacro:if value="${clip_distance > 0.0}">\n                            <far>${clip_distance}</far>\n                        </xacro:if>\n                    </clip>\n                    <noise>\n                        <type>gaussian</type>\n                        <mean>0.0</mean>\n                        <stddev>0.100</stddev>\n                    </noise>\n                </camera>\n                <always_on>1</always_on>\n                <xacro:unless value="${align_depth}">\n                    <update_rate>${depth_fps}</update_rate>\n                </xacro:unless>\n                <xacro:if value="${align_depth}">\n                    <update_rate>${color_fps}</update_rate>\n                </xacro:if>\n                <visualize>false</visualize>\n            </sensor>\n            \x3c!-- IMU --\x3e\n            <sensor name="${camera_name}imu" type="imu">\n                <always_on>true</always_on>\n                <update_rate>${gyro_fps}</update_rate>\n                \x3c!-- <topic>${camera_name}/imu/sample</topic> --\x3e\n                <topic>__default_topic__</topic>\n                <plugin name="${camera_name}imu" filename="libgazebo_ros_imu_sensor.so">\n                    <ros>\n                        \x3c!-- Will publish to /camera/imu --\x3e\n                        \x3c!-- <namespace>${camera_name}/imu</namespace> --\x3e\n                        <namespace>/camera</namespace>\n                        <remapping>~/out:=imu</remapping>\n                    </ros>\n                    <bodyName>${camera_name}_link</bodyName>\n                    <frameName>${gyro_optical_frame}</frameName>\n                    <updateRateHZ>${gyro_fps}</updateRateHZ>\n                    <gaussianNoise>0.1</gaussianNoise>\n                    <xyzOffset>0 0 0</xyzOffset>\n                    <rpyOffset>0 0 0</rpyOffset>\n                </plugin>\n            </sensor>\n        </gazebo>\n        <gazebo>\n            <plugin name="${topics_ns}" filename="librealsense_gazebo_plugin.so">\n                <prefix>${camera_name}</prefix>\n                \x3c!-- Color camera settings --\x3e\n                <colorUpdateRate>${color_fps}</colorUpdateRate>\n                <colorTopicName>camera/color/image_raw</colorTopicName>\n                <colorOpticalframeName>${color_optical_frame}</colorOpticalframeName>\n                <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>\n                \x3c!-- Infrared camera settings --\x3e\n                <infraredUpdateRate>${infra_fps}</infraredUpdateRate>\n                <infrared1TopicName>camera/infra1/image_rect_raw</infrared1TopicName>\n                <infrared2TopicName>camera/infra2/image_rect_raw</infrared2TopicName>\n                <infrared1CameraInfoTopicName>camera/infra1/camera_info</infrared1CameraInfoTopicName>\n                <infrared2CameraInfoTopicName>camera/infra2/camera_info</infrared2CameraInfoTopicName>\n                <infrared1OpticalframeName>${infrared1_optical_frame}</infrared1OpticalframeName>\n                <infrared2OpticalframeName>${infrared2_optical_frame}</infrared2OpticalframeName>\n                \x3c!-- Depth camera settings --\x3e\n                <rangeMinDepth>0.2</rangeMinDepth>\n                <xacro:unless value="${clip_distance > 0.0}">\n                    <rangeMaxDepth>10.0</rangeMaxDepth>\n                </xacro:unless>\n                <xacro:if value="${clip_distance > 0.0}">\n                    <rangeMaxDepth>${clip_distance}</rangeMaxDepth>\n                </xacro:if>\n                <xacro:unless value="${align_depth}">\n                    <depthUpdateRate>${depth_fps}</depthUpdateRate>\n                    <depthTopicName>camera/depth/image_rect_raw</depthTopicName>\n                    <depthCameraInfoTopicName>camera/depth/camera_info</depthCameraInfoTopicName>\n                    <depthOpticalframeName>${depth_optical_frame}</depthOpticalframeName>\n                </xacro:unless>\n                <xacro:if value="${align_depth}">\n                    <depthUpdateRate>${color_fps}</depthUpdateRate>\n                    <depthTopicName>camera/aligned_depth_to_color/image_raw</depthTopicName>\n                    <depthCameraInfoTopicName>camera/aligned_depth_to_color/camera_info</depthCameraInfoTopicName>\n                    <depthOpticalframeName>${color_optical_frame}</depthOpticalframeName>\n                </xacro:if>\n                \x3c!-- Pointlcloud settings --\x3e\n                <pointCloud>${enable_pointCloud}</pointCloud>\n                <pointCloudTopicName>depth/color/points</pointCloudTopicName>\n                <pointCloudCutoff>0.5</pointCloudCutoff>\n                \x3c!-- <ros>\n                    <namespace>/camera</namespace>\n                </ros> --\x3e\n            </plugin>\n        </gazebo>\n    </xacro:macro>\n</robot>\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u542f\u52a8\u6587\u4ef6"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"# Requirements:\n#   A realsense D435i\n#   Install realsense2 ros2 package (ros-$ROS_DISTRO-realsense2-camera)\n#\n#   RTAB-Map in mapping mode\n\nimport os\n\nfrom launch import LaunchDescription, Substitution, LaunchContext\nfrom launch.actions import DeclareLaunchArgument, SetEnvironmentVariable, LogInfo, OpaqueFunction\nfrom launch.substitutions import LaunchConfiguration, ThisLaunchFileDir, PythonExpression\nfrom launch.conditions import IfCondition, UnlessCondition\nfrom launch_ros.actions import Node\nfrom launch_ros.actions import SetParameter\nfrom typing import Text\nfrom ament_index_python.packages import get_package_share_directory\n\nclass ConditionalText(Substitution):\n    def __init__(self, text_if, text_else, condition):\n        self.text_if = text_if\n        self.text_else = text_else\n        self.condition = condition\n\n    def perform(self, context: 'LaunchContext') -> Text:\n        if self.condition == True or self.condition == 'true' or self.condition == 'True':\n            return self.text_if\n        else:\n            return self.text_else\n\n            \ndef launch_setup(context, *args, **kwargs):     \n\n    use_sim_time = LaunchConfiguration('use_sim_time')\n    qos = LaunchConfiguration('qos')\n    localization = LaunchConfiguration('localization')\n\n    parameters={\n    'frame_id':'camera_link',\n    # 'frame_id':'camera_color_optical_frame',\n    'use_sim_time':use_sim_time,\n    'subscribe_depth':True,\n    'subscribe_odom_info':True,\n    'approx_sync':False,\n    'qos_image':qos,\n    'qos_imu':qos,\n    'wait_imu_to_init':True\n    }\n\n    # /camera/infra1/image_rect_raw,\n    # /camera/depth/image_rect_raw,\n    # /camera/infra1/camera_info\n\n    remappings=[\n          ('imu', '/imu/data'),\n          ('rgb/image', '/camera/infra1/image_rect_raw'),\n          ('rgb/camera_info', '/camera/infra1/camera_info'),\n          ('depth/image', '/camera/depth/image_rect_raw')] \n\n    # remappings=[\n    #     ('rgb/image', '/camera/camera/image_raw'),\n    #     ('rgb/camera_info', '/camera/camera/camera_info'),\n    #     ('depth/image', '/camera/camera/depth/image_raw')]\n\n    return [\n\n        DeclareLaunchArgument('args',  default_value=LaunchConfiguration('rtabmap_args'), \n                              description='Can be used to pass RTAB-Map\\'s parameters or other flags like --udebug and --delete_db_on_start/-d'),\n    \n        Node(\n            package='rtabmap_odom', executable='rgbd_odometry', output='screen',\n            parameters=[parameters],\n            remappings=remappings),\n\n        # SLAM mode:\n        Node(\n            condition=UnlessCondition(localization),\n            package='rtabmap_slam', executable='rtabmap', output='screen',\n            parameters=[parameters],\n            remappings=remappings,\n            arguments=['-d']), # This will delete the previous database (~/.ros/rtabmap.db)\n            \n        # Localization mode:\n        Node(\n            condition=IfCondition(localization),\n            package='rtabmap_slam', executable='rtabmap', output='screen',\n            parameters=[parameters,\n              {'Mem/IncrementalMemory':'False',\n               'Mem/InitWMWithAllNodes':'True'}],\n            remappings=remappings),\n\n        Node(\n            package='rtabmap_viz', executable='rtabmap_viz', output='screen',\n            parameters=[parameters],\n            condition=IfCondition(LaunchConfiguration(\"rtabmap_viz\")),\n            remappings=remappings),\n\n        Node(\n            package='rviz2', executable='rviz2', output='screen',\n            condition=IfCondition(LaunchConfiguration(\"rviz\")),\n            arguments=[[\"-d\"], [LaunchConfiguration(\"rviz_cfg\")]]\n            ),\n\n        Node(\n            package='rtabmap_util', executable='point_cloud_xyzrgb', output='screen',\n            condition=IfCondition(LaunchConfiguration(\"rviz\")),\n            parameters=[{\n                \"decimation\": 4,\n                \"voxel_size\": 0.0,\n                \"approx_sync\": LaunchConfiguration('approx_sync'),\n                \"approx_sync_max_interval\": LaunchConfiguration('approx_sync_max_interval')\n            }],\n            remappings=remappings),\n\n                \n        # Compute quaternion of the IMU\n        Node(\n            package='imu_filter_madgwick', executable='imu_filter_madgwick_node', output='screen',\n            parameters=[{'use_mag': False, \n                         'world_frame':'enu', \n                         'publish_tf':False}],\n            remappings=[('imu/data_raw', '/camera/imu')]),\n        \n        # The IMU frame is missing in TF tree, add it:\n        # Node(\n        #     package='tf2_ros', executable='static_transform_publisher', output='screen',\n        #     arguments=['0', '0', '0', '0', '0', '0', 'camera_gyro_optical_frame', 'camera_imu_optical_frame']),\n    ]\n\ndef generate_launch_description():\n\n    config_rviz = os.path.join(\n        get_package_share_directory('AirLab_in_gazebo'), 'configs', 'sim.rviz')   \n\n    return LaunchDescription([\n\n        # Declare Launch Argument\n        DeclareLaunchArgument('approx_sync', default_value='false', \n                              description='If timestamps of the input topics should be synchronized using approximate or exact time policy.'),\n        \n        DeclareLaunchArgument('approx_sync_max_interval', default_value='0.0', \n                              description='(sec) 0 means infinite interval duration (used with approx_sync=true)'),\n        \n        DeclareLaunchArgument('database_path', default_value='~/ros2_ws/src/drone_vslam/map_database/rtabmap.db',  \n                              description='Where is the map saved/loaded.'),\n        \n        DeclareLaunchArgument('localization', default_value='false', \n                              description='Launch in localization mode.'),\n        \n        DeclareLaunchArgument('rtabmap_viz', default_value='false',  \n                              description='Launch RTAB-Map UI (optional).'),\n        \n        DeclareLaunchArgument('rviz', default_value='true', \n                              description='Launch RVIZ (optional).'),\n        \n        DeclareLaunchArgument('rviz_cfg', default_value=config_rviz, \n                              description='Configuration path of rviz2.'),\n        \n        DeclareLaunchArgument('initial_pose', default_value='', \n                              description='Set an initial pose (only in localization mode). Format: \"x y z roll pitch yaw\" or \"x y z qx qy qz qw\". Default: see \"RGBD/StartAtOrigin\" doc'),\n        \n        DeclareLaunchArgument('rtabmap_args',   default_value='',                   \n                              description='Backward compatibility, use \"args\" instead.'),\n\n        DeclareLaunchArgument('use_sim_time', default_value='true',\n                              description='Use simulation (Gazebo) clock if true'),\n        \n        DeclareLaunchArgument('qos', default_value='2',\n                              description='QoS used for input sensor topics'),\n\n        OpaqueFunction(function=launch_setup)\n\n        \n    ])\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6211\u53ef\u4ee5\u4f7f\u7528 ros2 \u4e3b\u9898\u5217\u8868\u770b\u5230 RealSense D435i \u7684\u4e3b\u9898\uff0c\u4f46 RTAB-Map \u663e\u793a\u9519\u8bef\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'ros2 launch AirLab_in_gazebo rtabmap.launch.py \n[INFO] [launch]: All log files can be found below /home/yuan/.ros/log/2023-11-23-23-09-47-685092-airlab-ubuntu-48020\n[INFO] [launch]: Default logging verbosity is set to INFO\n[INFO] [rgbd_odometry-1]: process started with pid [48021]\n[INFO] [rtabmap-2]: process started with pid [48023]\n[INFO] [rviz2-3]: process started with pid [48025]\n[INFO] [point_cloud_xyzrgb-4]: process started with pid [48027]\n[INFO] [imu_filter_madgwick_node-5]: process started with pid [48029]\n[rviz2-3] Warning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on Wayland anyway.\n[imu_filter_madgwick_node-5] [INFO] [1700752187.906796975] [imu_filter_madgwick]: Starting ImuFilter\n[imu_filter_madgwick_node-5] [INFO] [1700752187.907461693] [imu_filter_madgwick]: Using dt computed from message headers\n[imu_filter_madgwick_node-5] [INFO] [1700752187.907903148] [imu_filter_madgwick]: The gravity vector is kept in the IMU message.\n[imu_filter_madgwick_node-5] [INFO] [1700752187.908067206] [imu_filter_madgwick]: Imu filter gain set to 0.100000\n[imu_filter_madgwick_node-5] [INFO] [1700752187.908220104] [imu_filter_madgwick]: Gyro drift bias set to 0.000000\n[imu_filter_madgwick_node-5] [INFO] [1700752187.908376629] [imu_filter_madgwick]: Magnetometer bias values: 0.000000 0.000000 0.000000\n[imu_filter_madgwick_node-5] [INFO] [1700752187.951302037] [imu_filter_madgwick]: First IMU message received.\n[point_cloud_xyzrgb-4] [INFO] [1700752188.383917664] [point_cloud_xyzrgb]: Approximate time sync = false\n[rviz2-3] [INFO] [1700752188.410883286] [rviz2]: Stereo is NOT SUPPORTED\n[rviz2-3] [INFO] [1700752188.414315875] [rviz2]: OpenGl version: 4.3 (GLSL 4.3)\n[rgbd_odometry-1] [INFO] [1700752188.414934083] [rgbd_odometry]: Odometry: frame_id               = camera_link\n[rgbd_odometry-1] [INFO] [1700752188.416136494] [rgbd_odometry]: Odometry: odom_frame_id          = odom\n[rgbd_odometry-1] [INFO] [1700752188.416373735] [rgbd_odometry]: Odometry: publish_tf             = true\n[rgbd_odometry-1] [INFO] [1700752188.416484769] [rgbd_odometry]: Odometry: wait_for_transform     = 0.100000\n[rgbd_odometry-1] [INFO] [1700752188.416590021] [rgbd_odometry]: Odometry: log_to_rosout_level    = 4\n[rgbd_odometry-1] [INFO] [1700752188.416710049] [rgbd_odometry]: Odometry: initial_pose           = xyz=0.000000,0.000000,0.000000 rpy=0.000000,-0.000000,0.000000\n[rgbd_odometry-1] [INFO] [1700752188.416803205] [rgbd_odometry]: Odometry: ground_truth_frame_id  = \n[rgbd_odometry-1] [INFO] [1700752188.417031991] [rgbd_odometry]: Odometry: ground_truth_base_frame_id = camera_link\n[rgbd_odometry-1] [INFO] [1700752188.417293246] [rgbd_odometry]: Odometry: config_path            = \n[rgbd_odometry-1] [INFO] [1700752188.417418053] [rgbd_odometry]: Odometry: publish_null_when_lost = true\n[rgbd_odometry-1] [INFO] [1700752188.417525544] [rgbd_odometry]: Odometry: guess_frame_id         = \n[rgbd_odometry-1] [INFO] [1700752188.417676668] [rgbd_odometry]: Odometry: guess_min_translation  = 0.000000\n[rgbd_odometry-1] [INFO] [1700752188.417786843] [rgbd_odometry]: Odometry: guess_min_rotation     = 0.000000\n[rgbd_odometry-1] [INFO] [1700752188.417979396] [rgbd_odometry]: Odometry: guess_min_time         = 0.000000\n[rgbd_odometry-1] [INFO] [1700752188.418092004] [rgbd_odometry]: Odometry: expected_update_rate   = 0.000000 Hz\n[rgbd_odometry-1] [INFO] [1700752188.418207894] [rgbd_odometry]: Odometry: max_update_rate        = 0.000000 Hz\n[rgbd_odometry-1] [INFO] [1700752188.418310645] [rgbd_odometry]: Odometry: min_update_rate        = 0.000000 Hz\n[rgbd_odometry-1] [INFO] [1700752188.418412511] [rgbd_odometry]: Odometry: wait_imu_to_init       = true\n[rgbd_odometry-1] [INFO] [1700752188.418527562] [rgbd_odometry]: Odometry: stereoParams_=0 visParams_=1 icpParams_=0\n[rgbd_odometry-1] [INFO] [1700752188.517090366] [rgbd_odometry]: odometry: Subscribing to IMU topic /imu/data\n[rgbd_odometry-1] [INFO] [1700752188.517746443] [rgbd_odometry]: odometry: qos_imu = 2\n[rgbd_odometry-1] [INFO] [1700752188.520287700] [rgbd_odometry]: RGBDOdometry: approx_sync    = false\n[rgbd_odometry-1] [INFO] [1700752188.520651535] [rgbd_odometry]: RGBDOdometry: queue_size     = 5\n[rgbd_odometry-1] [INFO] [1700752188.520814326] [rgbd_odometry]: RGBDOdometry: qos            = 0\n[rgbd_odometry-1] [INFO] [1700752188.520932233] [rgbd_odometry]: RGBDOdometry: qos_camera_info = 0\n[rgbd_odometry-1] [INFO] [1700752188.521042385] [rgbd_odometry]: RGBDOdometry: subscribe_rgbd = false\n[rgbd_odometry-1] [INFO] [1700752188.521151625] [rgbd_odometry]: RGBDOdometry: rgbd_cameras   = 1\n[rgbd_odometry-1] [INFO] [1700752188.521260708] [rgbd_odometry]: RGBDOdometry: keep_color     = false\n[rgbd_odometry-1] [INFO] [1700752188.525943058] [rgbd_odometry]: \n[rgbd_odometry-1] rgbd_odometry subscribed to (exact sync):\n[rgbd_odometry-1]    /camera/infra1/image_rect_raw,\n[rgbd_odometry-1]    /camera/depth/image_rect_raw,\n[rgbd_odometry-1]    /camera/infra1/camera_info\n[rviz2-3] [INFO] [1700752188.527412921] [rviz2]: Stereo is NOT SUPPORTED\n[rtabmap-2] [INFO] [1700752188.582625663] [rtabmap]: rtabmap(maps): map_filter_radius          = 0.000000\n[rtabmap-2] [INFO] [1700752188.582792715] [rtabmap]: rtabmap(maps): map_filter_angle           = 30.000000\n[rtabmap-2] [INFO] [1700752188.582799918] [rtabmap]: rtabmap(maps): map_cleanup                = true\n[rtabmap-2] [INFO] [1700752188.582802260] [rtabmap]: rtabmap(maps): map_always_update          = false\n[rtabmap-2] [INFO] [1700752188.582805453] [rtabmap]: rtabmap(maps): map_empty_ray_tracing      = true\n[rtabmap-2] [INFO] [1700752188.582807494] [rtabmap]: rtabmap(maps): cloud_output_voxelized     = true\n[rtabmap-2] [INFO] [1700752188.582809449] [rtabmap]: rtabmap(maps): cloud_subtract_filtering   = false\n[rtabmap-2] [INFO] [1700752188.582811434] [rtabmap]: rtabmap(maps): cloud_subtract_filtering_min_neighbors = 2\n[rtabmap-2] [INFO] [1700752188.582842066] [rtabmap]: rtabmap(maps): octomap_tree_depth         = 16\n[rtabmap-2] [INFO] [1700752188.636528314] [rtabmap]: rtabmap: frame_id      = camera_link\n[rtabmap-2] [INFO] [1700752188.636949700] [rtabmap]: rtabmap: map_frame_id  = map\n[rtabmap-2] [INFO] [1700752188.637108394] [rtabmap]: rtabmap: log_to_rosout_level  = 4\n[rtabmap-2] [INFO] [1700752188.637222744] [rtabmap]: rtabmap: initial_pose  = \n[rtabmap-2] [INFO] [1700752188.637332906] [rtabmap]: rtabmap: use_action_for_goal  = false\n[rtabmap-2] [INFO] [1700752188.637567326] [rtabmap]: rtabmap: tf_delay      = 0.050000\n[rtabmap-2] [INFO] [1700752188.637710874] [rtabmap]: rtabmap: tf_tolerance  = 0.100000\n[rtabmap-2] [INFO] [1700752188.637820028] [rtabmap]: rtabmap: odom_sensor_sync   = false\n[rtabmap-2] [INFO] [1700752188.638086276] [rtabmap]: rtabmap: gen_scan  = false\n[rtabmap-2] [INFO] [1700752188.638210921] [rtabmap]: rtabmap: gen_depth  = false\n[rtabmap-2] [INFO] [1700752188.757793219] [rtabmap]: RTAB-Map detection rate = 1.000000 Hz\n[rtabmap-2] [INFO] [1700752188.761995410] [rtabmap]: rtabmap: Deleted database "/home/yuan/.ros/rtabmap.db" (--delete_db_on_start or -d are set).\n[rtabmap-2] [INFO] [1700752188.762342135] [rtabmap]: rtabmap: Using database from "/home/yuan/.ros/rtabmap.db" (0 MB).\n[rtabmap-2] [INFO] [1700752188.824142561] [rtabmap]: rtabmap: Database version = "0.21.1".\n[rtabmap-2] [INFO] [1700752188.827641152] [rtabmap]: rtabmap: SLAM mode (Mem/IncrementalMemory=true)\n[rtabmap-2] [INFO] [1700752188.962759328] [rtabmap]: Setup callbacks\n[rtabmap-2] [INFO] [1700752188.963959838] [rtabmap]: rtabmap: subscribe_depth = true\n[rtabmap-2] [INFO] [1700752188.963991957] [rtabmap]: rtabmap: subscribe_rgb = true\n[rtabmap-2] [INFO] [1700752188.963995694] [rtabmap]: rtabmap: subscribe_stereo = false\n[rtabmap-2] [INFO] [1700752188.963998212] [rtabmap]: rtabmap: subscribe_rgbd = false (rgbd_cameras=1)\n[rtabmap-2] [INFO] [1700752188.964000885] [rtabmap]: rtabmap: subscribe_odom_info = true\n[rtabmap-2] [INFO] [1700752188.964003078] [rtabmap]: rtabmap: subscribe_user_data = false\n[rtabmap-2] [INFO] [1700752188.964005392] [rtabmap]: rtabmap: subscribe_scan = false\n[rtabmap-2] [INFO] [1700752188.964007749] [rtabmap]: rtabmap: subscribe_scan_cloud = false\n[rtabmap-2] [INFO] [1700752188.964009725] [rtabmap]: rtabmap: subscribe_scan_descriptor = false\n[rtabmap-2] [INFO] [1700752188.964012034] [rtabmap]: rtabmap: queue_size      = 10\n[rtabmap-2] [INFO] [1700752188.964014303] [rtabmap]: rtabmap: qos_image       = 2\n[rtabmap-2] [INFO] [1700752188.964016414] [rtabmap]: rtabmap: qos_camera_info = 2\n[rtabmap-2] [INFO] [1700752188.964018362] [rtabmap]: rtabmap: qos_scan        = 0\n[rtabmap-2] [INFO] [1700752188.964020425] [rtabmap]: rtabmap: qos_odom        = 0\n[rtabmap-2] [INFO] [1700752188.964022449] [rtabmap]: rtabmap: qos_user_data   = 0\n[rtabmap-2] [INFO] [1700752188.964024395] [rtabmap]: rtabmap: approx_sync     = false\n[rtabmap-2] [INFO] [1700752188.964032230] [rtabmap]: Setup depth callback\n[rtabmap-2] [INFO] [1700752188.995505127] [rtabmap]: \n[rtabmap-2] rtabmap subscribed to (exact sync):\n[rtabmap-2]    /odom \\\n[rtabmap-2]    /camera/infra1/image_rect_raw \\\n[rtabmap-2]    /camera/depth/image_rect_raw \\\n[rtabmap-2]    /camera/infra1/camera_info \\\n[rtabmap-2]    /odom_info\n[rviz2-3] [INFO] [1700752189.378253714] [rviz2]: Stereo is NOT SUPPORTED\n[rviz2-3] [INFO] [1700752189.382556392] [rviz2]: Stereo is NOT SUPPORTED\n[rgbd_odometry-1] [WARN] [1700752193.530089150] [rgbd_odometry]: rgbd_odometry: Did not receive data since 5 seconds! Make sure the input topics are published ("$ rostopic hz my_topic") and the timestamps in their header are set. Parameter "approx_sync" is false, which means that input topics should have all the exact timestamp for the callback to be called.\n[rgbd_odometry-1] rgbd_odometry subscribed to (exact sync):\n[rgbd_odometry-1]    /camera/infra1/image_rect_raw,\n[rgbd_odometry-1]    /camera/depth/image_rect_raw,\n[rgbd_odometry-1]    /camera/infra1/camera_info\n[rtabmap-2] [WARN] [1700752194.019042033] [rtabmap]: rtabmap: Did not receive data since 5 seconds! Make sure the input topics are published ("$ rostopic hz my_topic") and the timestamps in their header are set. If topics are coming from different computers, make sure the clocks of the computers are synchronized ("ntpdate"). If topics are not published at the same rate, you could increase "queue_size" parameter (current=10). Parameter "approx_sync" is false, which means that input topics should have all the exact timestamp for the callback to be called.\n[rtabmap-2] rtabmap subscribed to (exact sync):\n[rtabmap-2]    /odom \\\n[rtabmap-2]    /camera/infra1/image_rect_raw \\\n[rtabmap-2]    /camera/depth/image_rect_raw \\\n[rtabmap-2]    /camera/infra1/camera_info \\\n[rtabmap-2]    /odom_info\n^C[WARNING] [launch]: user interrupted with ctrl-c (SIGINT)\n[rgbd_odometry-1] [INFO] [1700752195.880895495] [rclcpp]: signal_handler(signum=2)\n[point_cloud_xyzrgb-4] [INFO] [1700752195.880898587] [rclcpp]: signal_handler(signum=2)\n[rtabmap-2] [INFO] [1700752195.881748431] [rclcpp]: signal_handler(signum=2)\n[rtabmap-2] [WARN] [1700752195.882585332] [rtabmap]: rtabmap: Did not receive data since 5 seconds! Make sure the input topics are published ("$ rostopic hz my_topic") and the timestamps in their header are set. If topics are coming from different computers, make sure the clocks of the computers are synchronized ("ntpdate"). If topics are not published at the same rate, you could increase "queue_size" parameter (current=10). Parameter "approx_sync" is false, which means that input topics should have all the exact timestamp for the callback to be called.\n[rtabmap-2] rtabmap subscribed to (exact sync):\n[rtabmap-2]    /odom \\\n[rtabmap-2]    /camera/infra1/image_rect_raw \\\n[rtabmap-2]    /camera/depth/image_rect_raw \\\n[rtabmap-2]    /camera/infra1/camera_info \\\n[rtabmap-2]    /odom_info\n[rviz2-3] [INFO] [1700752195.882848604] [rclcpp]: signal_handler(signum=2)\n[imu_filter_madgwick_node-5] [INFO] [1700752195.884572765] [rclcpp]: signal_handler(signum=2)\n[rgbd_odometry-1] [WARN] [1700752195.888917444] [rgbd_odometry]: rgbd_odometry: Did not receive data since 5 seconds! Make sure the input topics are published ("$ rostopic hz my_topic") and the timestamps in their header are set. \n[rgbd_odometry-1] rgbd_odometry subscribed to (exact sync):\n[rgbd_odometry-1]    /camera/infra1/image_rect_raw,\n[rgbd_odometry-1]    /camera/depth/image_rect_raw,\n[rgbd_odometry-1]    /camera/infra1/camera_info\n[rtabmap-2] [INFO] [1700752195.932880938] [rtabmap]: Parameters are not saved (No configuration file provided...)\n[INFO] [imu_filter_madgwick_node-5]: process has finished cleanly [pid 48029]\n[INFO] [point_cloud_xyzrgb-4]: process has finished cleanly [pid 48027]\n[INFO] [rviz2-3]: process has finished cleanly [pid 48025]\n[ERROR] [rtabmap-2]: process[rtabmap-2] failed to terminate \'5\' seconds after receiving \'SIGINT\', escalating to \'SIGTERM\'\n[ERROR] [rgbd_odometry-1]: process[rgbd_odometry-1] failed to terminate \'5\' seconds after receiving \'SIGINT\', escalating to \'SIGTERM\'\n[INFO] [rtabmap-2]: sending signal \'SIGTERM\' to process[rtabmap-2]\n[INFO] [rgbd_odometry-1]: sending signal \'SIGTERM\' to process[rgbd_odometry-1]\n[rtabmap-2] [INFO] [1700752200.887038270] [rclcpp]: signal_handler(signum=15)\n[rgbd_odometry-1] [INFO] [1700752200.887479670] [rclcpp]: signal_handler(signum=15)\n[rtabmap-2] rtabmap: Saving database/long-term memory... (located at /home/yuan/.ros/rtabmap.db)\n[rtabmap-2] rtabmap: Saving database/long-term memory...done! (located at /home/yuan/.ros/rtabmap.db, 0 MB)\n[INFO] [rtabmap-2]: process has finished cleanly [pid 48023]\n[INFO] [rgbd_odometry-1]: process has finished cleanly [pid 48021]\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u201c\u6211\u5728 Ubuntu 22.04 \u4e0a\u4f7f\u7528 ROS2 Humble\u3002\u201d"})]})}function c(a={}){const{wrapper:e}={...(0,o.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(d,{...a})}):d(a)}},8453:(a,e,r)=>{r.d(e,{R:()=>i,x:()=>m});var n=r(6540);const t={},o=n.createContext(t);function i(a){const e=n.useContext(o);return n.useMemo(function(){return"function"==typeof a?a(e):{...e,...a}},[e,a])}function m(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(t):a.components||t:i(a.components),n.createElement(o.Provider,{value:e},a.children)}}}]);